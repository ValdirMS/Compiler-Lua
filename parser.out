Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    SEMICOLON

Grammar

Rule 0     S' -> program
Rule 1     program -> comand NEWLINE
Rule 2     program -> function NEWLINE
Rule 3     program -> local_function NEWLINE
Rule 4     program -> comand NEWLINE program
Rule 5     program -> function NEWLINE program
Rule 6     program -> local_function NEWLINE program
Rule 7     function -> FUNCTION signature comands END
Rule 8     local_function -> LOCAL FUNCTION signature comands END
Rule 9     signature -> ID LPAREN sigparams RPAREN
Rule 10    signature -> ID LPAREN RPAREN
Rule 11    sigparams -> ID
Rule 12    sigparams -> ID COMMA sigparams
Rule 13    comands -> comand NEWLINE
Rule 14    comands -> comand NEWLINE comands
Rule 15    comand -> IF list_exp THEN comands END
Rule 16    comand -> IF list_exp THEN comands ELSE comands END
Rule 17    comand -> IF list_exp THEN comands elseif ELSE comands
Rule 18    comand -> other_comand
Rule 19    elseif -> ELSEIF list_exp THEN comands
Rule 20    elseif -> ELSEIF list_exp THEN comands elseif
Rule 21    other_comand -> WHILE list_exp DO comands END
Rule 22    other_comand -> fordo
Rule 23    other_comand -> exp
Rule 24    other_comand -> forin
Rule 25    other_comand -> RETURN exp
Rule 26    other_comand -> BREAK
Rule 27    fordo -> FOR list_exp DO comands END
Rule 28    forin -> FOR list_exp IN exp DO comands END
Rule 29    list_exp -> LPAREN exp RPAREN
Rule 30    list_exp -> exp
Rule 31    call -> ID LPAREN exp RPAREN
Rule 32    call -> ID LPAREN RPAREN
Rule 33    array -> LKEY exp RKEY
Rule 34    array -> LKEY RKEY
Rule 35    array -> ID LCOCHETE exp RCOCHETE
Rule 36    array -> ID LCOCHETE RCOCHETE
Rule 37    exp -> exp ASSIGN exp_1
Rule 38    exp -> exp_1
Rule 39    exp_1 -> exp_1 OR exp_2
Rule 40    exp_1 -> exp_2
Rule 41    exp_2 -> exp_2 AND exp_3
Rule 42    exp_2 -> exp_3
Rule 43    exp_3 -> exp_3 LESS_THAN exp_4
Rule 44    exp_3 -> exp_4
Rule 45    exp_4 -> exp_4 BIGGER_THAN exp_5
Rule 46    exp_4 -> exp_5
Rule 47    exp_5 -> exp_5 LESS_EQUAL exp_6
Rule 48    exp_5 -> exp_6
Rule 49    exp_6 -> exp_6 BIGGER_EQUAL exp_7
Rule 50    exp_6 -> exp_7
Rule 51    exp_7 -> exp_7 DIF exp_8
Rule 52    exp_7 -> exp_8
Rule 53    exp_8 -> exp_8 EQUAL exp_9
Rule 54    exp_8 -> exp_9
Rule 55    exp_9 -> exp_9 BITWISE_OR exp_10
Rule 56    exp_9 -> exp_10
Rule 57    exp_10 -> exp_10 BITWISE_EXC_OR exp_11
Rule 58    exp_10 -> exp_11
Rule 59    exp_11 -> exp_11 BITWISE_AND exp_12
Rule 60    exp_11 -> exp_12
Rule 61    exp_12 -> exp_12 CONCATENATION exp_13
Rule 62    exp_12 -> exp_13
Rule 63    exp_13 -> exp_13 SUB exp_14
Rule 64    exp_13 -> exp_14
Rule 65    exp_14 -> exp_14 SUM exp_15
Rule 66    exp_14 -> exp_15
Rule 67    exp_15 -> exp_15 MODULE exp_16
Rule 68    exp_15 -> exp_16
Rule 69    exp_16 -> exp_16 DIV_INT exp_17
Rule 70    exp_16 -> exp_17
Rule 71    exp_17 -> exp_17 DIV exp_18
Rule 72    exp_17 -> exp_18
Rule 73    exp_18 -> exp_18 MULT exp_19
Rule 74    exp_18 -> exp_19
Rule 75    exp_19 -> exp_19 NOT exp_20
Rule 76    exp_19 -> exp_20
Rule 77    exp_20 -> DENIAL exp_20
Rule 78    exp_20 -> exp_21
Rule 79    exp_21 -> UNARY_BITWISE_NOT exp_21
Rule 80    exp_21 -> exp_22
Rule 81    exp_22 -> LENGHT exp_22
Rule 82    exp_22 -> exp_23
Rule 83    exp_23 -> exp_23 POW exp_24
Rule 84    exp_23 -> exp_24
Rule 85    exp_24 -> exp_24 COMMA exp_25
Rule 86    exp_24 -> exp_24 DOT exp_25
Rule 87    exp_24 -> array
Rule 88    exp_24 -> call
Rule 89    exp_24 -> exp_25
Rule 90    exp_25 -> NUMBER
Rule 91    exp_25 -> STRING
Rule 92    exp_25 -> LOCAL ID
Rule 93    exp_25 -> ID
Rule 94    exp_25 -> NIL
Rule 95    exp_25 -> TRUE
Rule 96    exp_25 -> FALSE

Terminals, with rules where they appear

AND                  : 41
ASSIGN               : 37
BIGGER_EQUAL         : 49
BIGGER_THAN          : 45
BITWISE_AND          : 59
BITWISE_EXC_OR       : 57
BITWISE_OR           : 55
BREAK                : 26
COLON                : 
COMMA                : 12 85
COMMENT              : 
CONCATENATION        : 61
DENIAL               : 77
DIF                  : 51
DIV                  : 71
DIV_INT              : 69
DO                   : 21 27 28
DOT                  : 86
ELSE                 : 16 17
ELSEIF               : 19 20
END                  : 7 8 15 16 21 27 28
EQUAL                : 53
FALSE                : 96
FOR                  : 27 28
FUNCTION             : 7 8
ID                   : 9 10 11 12 31 32 35 36 92 93
IF                   : 15 16 17
IN                   : 28
LCOCHETE             : 35 36
LENGHT               : 81
LESS_EQUAL           : 47
LESS_THAN            : 43
LKEY                 : 33 34
LOCAL                : 8 92
LPAREN               : 9 10 29 31 32
MODULE               : 67
MULT                 : 73
NEWLINE              : 1 2 3 4 5 6 13 14
NIL                  : 94
NOT                  : 75
NUMBER               : 90
OR                   : 39
POW                  : 83
RCOCHETE             : 35 36
RETURN               : 25
RKEY                 : 33 34
RPAREN               : 9 10 29 31 32
SEMICOLON            : 
STRING               : 91
SUB                  : 63
SUM                  : 65
THEN                 : 15 16 17 19 20
TRUE                 : 95
UNARY_BITWISE_NOT    : 79
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

array                : 87
call                 : 88
comand               : 1 4 13 14
comands              : 7 8 14 15 16 16 17 17 19 20 21 27 28
elseif               : 17 20
exp                  : 23 25 28 29 30 31 33 35 37
exp_1                : 37 38 39
exp_10               : 55 56 57
exp_11               : 57 58 59
exp_12               : 59 60 61
exp_13               : 61 62 63
exp_14               : 63 64 65
exp_15               : 65 66 67
exp_16               : 67 68 69
exp_17               : 69 70 71
exp_18               : 71 72 73
exp_19               : 73 74 75
exp_2                : 39 40 41
exp_20               : 75 76 77
exp_21               : 78 79
exp_22               : 80 81
exp_23               : 82 83
exp_24               : 83 84 85 86
exp_25               : 85 86 89
exp_3                : 41 42 43
exp_4                : 43 44 45
exp_5                : 45 46 47
exp_6                : 47 48 49
exp_7                : 49 50 51
exp_8                : 51 52 53
exp_9                : 53 54 55
fordo                : 22
forin                : 24
function             : 2 5
list_exp             : 15 16 17 19 20 21 27 28
local_function       : 3 6
other_comand         : 18
program              : 4 5 6 0
signature            : 7 8
sigparams            : 9 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . comand NEWLINE
    (2) program -> . function NEWLINE
    (3) program -> . local_function NEWLINE
    (4) program -> . comand NEWLINE program
    (5) program -> . function NEWLINE program
    (6) program -> . local_function NEWLINE program
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (7) function -> . FUNCTION signature comands END
    (8) local_function -> . LOCAL FUNCTION signature comands END
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    FUNCTION        shift and go to state 7
    LOCAL           shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    program                        shift and go to state 1
    comand                         shift and go to state 2
    function                       shift and go to state 3
    local_function                 shift and go to state 4
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 1

    (0) S' -> program .



state 2

    (1) program -> comand . NEWLINE
    (4) program -> comand . NEWLINE program

    NEWLINE         shift and go to state 53


state 3

    (2) program -> function . NEWLINE
    (5) program -> function . NEWLINE program

    NEWLINE         shift and go to state 54


state 4

    (3) program -> local_function . NEWLINE
    (6) program -> local_function . NEWLINE program

    NEWLINE         shift and go to state 55


state 5

    (15) comand -> IF . list_exp THEN comands END
    (16) comand -> IF . list_exp THEN comands ELSE comands END
    (17) comand -> IF . list_exp THEN comands elseif ELSE comands
    (29) list_exp -> . LPAREN exp RPAREN
    (30) list_exp -> . exp
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LPAREN          shift and go to state 57
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    list_exp                       shift and go to state 56
    exp                            shift and go to state 58
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 6

    (18) comand -> other_comand .

    NEWLINE         reduce using rule 18 (comand -> other_comand .)


state 7

    (7) function -> FUNCTION . signature comands END
    (9) signature -> . ID LPAREN sigparams RPAREN
    (10) signature -> . ID LPAREN RPAREN

    ID              shift and go to state 61

    signature                      shift and go to state 60

state 8

    (8) local_function -> LOCAL . FUNCTION signature comands END
    (92) exp_25 -> LOCAL . ID

    FUNCTION        shift and go to state 62
    ID              shift and go to state 63


state 9

    (21) other_comand -> WHILE . list_exp DO comands END
    (29) list_exp -> . LPAREN exp RPAREN
    (30) list_exp -> . exp
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LPAREN          shift and go to state 57
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    list_exp                       shift and go to state 64
    exp                            shift and go to state 58
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 10

    (22) other_comand -> fordo .

    NEWLINE         reduce using rule 22 (other_comand -> fordo .)


state 11

    (23) other_comand -> exp .
    (37) exp -> exp . ASSIGN exp_1

    NEWLINE         reduce using rule 23 (other_comand -> exp .)
    ASSIGN          shift and go to state 65


state 12

    (24) other_comand -> forin .

    NEWLINE         reduce using rule 24 (other_comand -> forin .)


state 13

    (25) other_comand -> RETURN . exp
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 66
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 14

    (26) other_comand -> BREAK .

    NEWLINE         reduce using rule 26 (other_comand -> BREAK .)


state 15

    (27) fordo -> FOR . list_exp DO comands END
    (28) forin -> FOR . list_exp IN exp DO comands END
    (29) list_exp -> . LPAREN exp RPAREN
    (30) list_exp -> . exp
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LPAREN          shift and go to state 57
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    list_exp                       shift and go to state 67
    exp                            shift and go to state 58
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 16

    (38) exp -> exp_1 .
    (39) exp_1 -> exp_1 . OR exp_2

    ASSIGN          reduce using rule 38 (exp -> exp_1 .)
    NEWLINE         reduce using rule 38 (exp -> exp_1 .)
    THEN            reduce using rule 38 (exp -> exp_1 .)
    DO              reduce using rule 38 (exp -> exp_1 .)
    IN              reduce using rule 38 (exp -> exp_1 .)
    RKEY            reduce using rule 38 (exp -> exp_1 .)
    RPAREN          reduce using rule 38 (exp -> exp_1 .)
    RCOCHETE        reduce using rule 38 (exp -> exp_1 .)
    OR              shift and go to state 68


state 17

    (40) exp_1 -> exp_2 .
    (41) exp_2 -> exp_2 . AND exp_3

    OR              reduce using rule 40 (exp_1 -> exp_2 .)
    ASSIGN          reduce using rule 40 (exp_1 -> exp_2 .)
    NEWLINE         reduce using rule 40 (exp_1 -> exp_2 .)
    THEN            reduce using rule 40 (exp_1 -> exp_2 .)
    DO              reduce using rule 40 (exp_1 -> exp_2 .)
    IN              reduce using rule 40 (exp_1 -> exp_2 .)
    RKEY            reduce using rule 40 (exp_1 -> exp_2 .)
    RPAREN          reduce using rule 40 (exp_1 -> exp_2 .)
    RCOCHETE        reduce using rule 40 (exp_1 -> exp_2 .)
    AND             shift and go to state 69


state 18

    (42) exp_2 -> exp_3 .
    (43) exp_3 -> exp_3 . LESS_THAN exp_4

    AND             reduce using rule 42 (exp_2 -> exp_3 .)
    OR              reduce using rule 42 (exp_2 -> exp_3 .)
    ASSIGN          reduce using rule 42 (exp_2 -> exp_3 .)
    NEWLINE         reduce using rule 42 (exp_2 -> exp_3 .)
    THEN            reduce using rule 42 (exp_2 -> exp_3 .)
    DO              reduce using rule 42 (exp_2 -> exp_3 .)
    IN              reduce using rule 42 (exp_2 -> exp_3 .)
    RKEY            reduce using rule 42 (exp_2 -> exp_3 .)
    RPAREN          reduce using rule 42 (exp_2 -> exp_3 .)
    RCOCHETE        reduce using rule 42 (exp_2 -> exp_3 .)
    LESS_THAN       shift and go to state 70


state 19

    (44) exp_3 -> exp_4 .
    (45) exp_4 -> exp_4 . BIGGER_THAN exp_5

    LESS_THAN       reduce using rule 44 (exp_3 -> exp_4 .)
    AND             reduce using rule 44 (exp_3 -> exp_4 .)
    OR              reduce using rule 44 (exp_3 -> exp_4 .)
    ASSIGN          reduce using rule 44 (exp_3 -> exp_4 .)
    NEWLINE         reduce using rule 44 (exp_3 -> exp_4 .)
    THEN            reduce using rule 44 (exp_3 -> exp_4 .)
    DO              reduce using rule 44 (exp_3 -> exp_4 .)
    IN              reduce using rule 44 (exp_3 -> exp_4 .)
    RKEY            reduce using rule 44 (exp_3 -> exp_4 .)
    RPAREN          reduce using rule 44 (exp_3 -> exp_4 .)
    RCOCHETE        reduce using rule 44 (exp_3 -> exp_4 .)
    BIGGER_THAN     shift and go to state 71


state 20

    (46) exp_4 -> exp_5 .
    (47) exp_5 -> exp_5 . LESS_EQUAL exp_6

    BIGGER_THAN     reduce using rule 46 (exp_4 -> exp_5 .)
    LESS_THAN       reduce using rule 46 (exp_4 -> exp_5 .)
    AND             reduce using rule 46 (exp_4 -> exp_5 .)
    OR              reduce using rule 46 (exp_4 -> exp_5 .)
    ASSIGN          reduce using rule 46 (exp_4 -> exp_5 .)
    NEWLINE         reduce using rule 46 (exp_4 -> exp_5 .)
    THEN            reduce using rule 46 (exp_4 -> exp_5 .)
    DO              reduce using rule 46 (exp_4 -> exp_5 .)
    IN              reduce using rule 46 (exp_4 -> exp_5 .)
    RKEY            reduce using rule 46 (exp_4 -> exp_5 .)
    RPAREN          reduce using rule 46 (exp_4 -> exp_5 .)
    RCOCHETE        reduce using rule 46 (exp_4 -> exp_5 .)
    LESS_EQUAL      shift and go to state 72


state 21

    (48) exp_5 -> exp_6 .
    (49) exp_6 -> exp_6 . BIGGER_EQUAL exp_7

    LESS_EQUAL      reduce using rule 48 (exp_5 -> exp_6 .)
    BIGGER_THAN     reduce using rule 48 (exp_5 -> exp_6 .)
    LESS_THAN       reduce using rule 48 (exp_5 -> exp_6 .)
    AND             reduce using rule 48 (exp_5 -> exp_6 .)
    OR              reduce using rule 48 (exp_5 -> exp_6 .)
    ASSIGN          reduce using rule 48 (exp_5 -> exp_6 .)
    NEWLINE         reduce using rule 48 (exp_5 -> exp_6 .)
    THEN            reduce using rule 48 (exp_5 -> exp_6 .)
    DO              reduce using rule 48 (exp_5 -> exp_6 .)
    IN              reduce using rule 48 (exp_5 -> exp_6 .)
    RKEY            reduce using rule 48 (exp_5 -> exp_6 .)
    RPAREN          reduce using rule 48 (exp_5 -> exp_6 .)
    RCOCHETE        reduce using rule 48 (exp_5 -> exp_6 .)
    BIGGER_EQUAL    shift and go to state 73


state 22

    (50) exp_6 -> exp_7 .
    (51) exp_7 -> exp_7 . DIF exp_8

    BIGGER_EQUAL    reduce using rule 50 (exp_6 -> exp_7 .)
    LESS_EQUAL      reduce using rule 50 (exp_6 -> exp_7 .)
    BIGGER_THAN     reduce using rule 50 (exp_6 -> exp_7 .)
    LESS_THAN       reduce using rule 50 (exp_6 -> exp_7 .)
    AND             reduce using rule 50 (exp_6 -> exp_7 .)
    OR              reduce using rule 50 (exp_6 -> exp_7 .)
    ASSIGN          reduce using rule 50 (exp_6 -> exp_7 .)
    NEWLINE         reduce using rule 50 (exp_6 -> exp_7 .)
    THEN            reduce using rule 50 (exp_6 -> exp_7 .)
    DO              reduce using rule 50 (exp_6 -> exp_7 .)
    IN              reduce using rule 50 (exp_6 -> exp_7 .)
    RKEY            reduce using rule 50 (exp_6 -> exp_7 .)
    RPAREN          reduce using rule 50 (exp_6 -> exp_7 .)
    RCOCHETE        reduce using rule 50 (exp_6 -> exp_7 .)
    DIF             shift and go to state 74


state 23

    (52) exp_7 -> exp_8 .
    (53) exp_8 -> exp_8 . EQUAL exp_9

    DIF             reduce using rule 52 (exp_7 -> exp_8 .)
    BIGGER_EQUAL    reduce using rule 52 (exp_7 -> exp_8 .)
    LESS_EQUAL      reduce using rule 52 (exp_7 -> exp_8 .)
    BIGGER_THAN     reduce using rule 52 (exp_7 -> exp_8 .)
    LESS_THAN       reduce using rule 52 (exp_7 -> exp_8 .)
    AND             reduce using rule 52 (exp_7 -> exp_8 .)
    OR              reduce using rule 52 (exp_7 -> exp_8 .)
    ASSIGN          reduce using rule 52 (exp_7 -> exp_8 .)
    NEWLINE         reduce using rule 52 (exp_7 -> exp_8 .)
    THEN            reduce using rule 52 (exp_7 -> exp_8 .)
    DO              reduce using rule 52 (exp_7 -> exp_8 .)
    IN              reduce using rule 52 (exp_7 -> exp_8 .)
    RKEY            reduce using rule 52 (exp_7 -> exp_8 .)
    RPAREN          reduce using rule 52 (exp_7 -> exp_8 .)
    RCOCHETE        reduce using rule 52 (exp_7 -> exp_8 .)
    EQUAL           shift and go to state 75


state 24

    (54) exp_8 -> exp_9 .
    (55) exp_9 -> exp_9 . BITWISE_OR exp_10

    EQUAL           reduce using rule 54 (exp_8 -> exp_9 .)
    DIF             reduce using rule 54 (exp_8 -> exp_9 .)
    BIGGER_EQUAL    reduce using rule 54 (exp_8 -> exp_9 .)
    LESS_EQUAL      reduce using rule 54 (exp_8 -> exp_9 .)
    BIGGER_THAN     reduce using rule 54 (exp_8 -> exp_9 .)
    LESS_THAN       reduce using rule 54 (exp_8 -> exp_9 .)
    AND             reduce using rule 54 (exp_8 -> exp_9 .)
    OR              reduce using rule 54 (exp_8 -> exp_9 .)
    ASSIGN          reduce using rule 54 (exp_8 -> exp_9 .)
    NEWLINE         reduce using rule 54 (exp_8 -> exp_9 .)
    THEN            reduce using rule 54 (exp_8 -> exp_9 .)
    DO              reduce using rule 54 (exp_8 -> exp_9 .)
    IN              reduce using rule 54 (exp_8 -> exp_9 .)
    RKEY            reduce using rule 54 (exp_8 -> exp_9 .)
    RPAREN          reduce using rule 54 (exp_8 -> exp_9 .)
    RCOCHETE        reduce using rule 54 (exp_8 -> exp_9 .)
    BITWISE_OR      shift and go to state 76


state 25

    (56) exp_9 -> exp_10 .
    (57) exp_10 -> exp_10 . BITWISE_EXC_OR exp_11

    BITWISE_OR      reduce using rule 56 (exp_9 -> exp_10 .)
    EQUAL           reduce using rule 56 (exp_9 -> exp_10 .)
    DIF             reduce using rule 56 (exp_9 -> exp_10 .)
    BIGGER_EQUAL    reduce using rule 56 (exp_9 -> exp_10 .)
    LESS_EQUAL      reduce using rule 56 (exp_9 -> exp_10 .)
    BIGGER_THAN     reduce using rule 56 (exp_9 -> exp_10 .)
    LESS_THAN       reduce using rule 56 (exp_9 -> exp_10 .)
    AND             reduce using rule 56 (exp_9 -> exp_10 .)
    OR              reduce using rule 56 (exp_9 -> exp_10 .)
    ASSIGN          reduce using rule 56 (exp_9 -> exp_10 .)
    NEWLINE         reduce using rule 56 (exp_9 -> exp_10 .)
    THEN            reduce using rule 56 (exp_9 -> exp_10 .)
    DO              reduce using rule 56 (exp_9 -> exp_10 .)
    IN              reduce using rule 56 (exp_9 -> exp_10 .)
    RKEY            reduce using rule 56 (exp_9 -> exp_10 .)
    RPAREN          reduce using rule 56 (exp_9 -> exp_10 .)
    RCOCHETE        reduce using rule 56 (exp_9 -> exp_10 .)
    BITWISE_EXC_OR  shift and go to state 77


state 26

    (58) exp_10 -> exp_11 .
    (59) exp_11 -> exp_11 . BITWISE_AND exp_12

    BITWISE_EXC_OR  reduce using rule 58 (exp_10 -> exp_11 .)
    BITWISE_OR      reduce using rule 58 (exp_10 -> exp_11 .)
    EQUAL           reduce using rule 58 (exp_10 -> exp_11 .)
    DIF             reduce using rule 58 (exp_10 -> exp_11 .)
    BIGGER_EQUAL    reduce using rule 58 (exp_10 -> exp_11 .)
    LESS_EQUAL      reduce using rule 58 (exp_10 -> exp_11 .)
    BIGGER_THAN     reduce using rule 58 (exp_10 -> exp_11 .)
    LESS_THAN       reduce using rule 58 (exp_10 -> exp_11 .)
    AND             reduce using rule 58 (exp_10 -> exp_11 .)
    OR              reduce using rule 58 (exp_10 -> exp_11 .)
    ASSIGN          reduce using rule 58 (exp_10 -> exp_11 .)
    NEWLINE         reduce using rule 58 (exp_10 -> exp_11 .)
    THEN            reduce using rule 58 (exp_10 -> exp_11 .)
    DO              reduce using rule 58 (exp_10 -> exp_11 .)
    IN              reduce using rule 58 (exp_10 -> exp_11 .)
    RKEY            reduce using rule 58 (exp_10 -> exp_11 .)
    RPAREN          reduce using rule 58 (exp_10 -> exp_11 .)
    RCOCHETE        reduce using rule 58 (exp_10 -> exp_11 .)
    BITWISE_AND     shift and go to state 78


state 27

    (60) exp_11 -> exp_12 .
    (61) exp_12 -> exp_12 . CONCATENATION exp_13

    BITWISE_AND     reduce using rule 60 (exp_11 -> exp_12 .)
    BITWISE_EXC_OR  reduce using rule 60 (exp_11 -> exp_12 .)
    BITWISE_OR      reduce using rule 60 (exp_11 -> exp_12 .)
    EQUAL           reduce using rule 60 (exp_11 -> exp_12 .)
    DIF             reduce using rule 60 (exp_11 -> exp_12 .)
    BIGGER_EQUAL    reduce using rule 60 (exp_11 -> exp_12 .)
    LESS_EQUAL      reduce using rule 60 (exp_11 -> exp_12 .)
    BIGGER_THAN     reduce using rule 60 (exp_11 -> exp_12 .)
    LESS_THAN       reduce using rule 60 (exp_11 -> exp_12 .)
    AND             reduce using rule 60 (exp_11 -> exp_12 .)
    OR              reduce using rule 60 (exp_11 -> exp_12 .)
    ASSIGN          reduce using rule 60 (exp_11 -> exp_12 .)
    NEWLINE         reduce using rule 60 (exp_11 -> exp_12 .)
    THEN            reduce using rule 60 (exp_11 -> exp_12 .)
    DO              reduce using rule 60 (exp_11 -> exp_12 .)
    IN              reduce using rule 60 (exp_11 -> exp_12 .)
    RKEY            reduce using rule 60 (exp_11 -> exp_12 .)
    RPAREN          reduce using rule 60 (exp_11 -> exp_12 .)
    RCOCHETE        reduce using rule 60 (exp_11 -> exp_12 .)
    CONCATENATION   shift and go to state 79


state 28

    (62) exp_12 -> exp_13 .
    (63) exp_13 -> exp_13 . SUB exp_14

    CONCATENATION   reduce using rule 62 (exp_12 -> exp_13 .)
    BITWISE_AND     reduce using rule 62 (exp_12 -> exp_13 .)
    BITWISE_EXC_OR  reduce using rule 62 (exp_12 -> exp_13 .)
    BITWISE_OR      reduce using rule 62 (exp_12 -> exp_13 .)
    EQUAL           reduce using rule 62 (exp_12 -> exp_13 .)
    DIF             reduce using rule 62 (exp_12 -> exp_13 .)
    BIGGER_EQUAL    reduce using rule 62 (exp_12 -> exp_13 .)
    LESS_EQUAL      reduce using rule 62 (exp_12 -> exp_13 .)
    BIGGER_THAN     reduce using rule 62 (exp_12 -> exp_13 .)
    LESS_THAN       reduce using rule 62 (exp_12 -> exp_13 .)
    AND             reduce using rule 62 (exp_12 -> exp_13 .)
    OR              reduce using rule 62 (exp_12 -> exp_13 .)
    ASSIGN          reduce using rule 62 (exp_12 -> exp_13 .)
    NEWLINE         reduce using rule 62 (exp_12 -> exp_13 .)
    THEN            reduce using rule 62 (exp_12 -> exp_13 .)
    DO              reduce using rule 62 (exp_12 -> exp_13 .)
    IN              reduce using rule 62 (exp_12 -> exp_13 .)
    RKEY            reduce using rule 62 (exp_12 -> exp_13 .)
    RPAREN          reduce using rule 62 (exp_12 -> exp_13 .)
    RCOCHETE        reduce using rule 62 (exp_12 -> exp_13 .)
    SUB             shift and go to state 80


state 29

    (64) exp_13 -> exp_14 .
    (65) exp_14 -> exp_14 . SUM exp_15

    SUB             reduce using rule 64 (exp_13 -> exp_14 .)
    CONCATENATION   reduce using rule 64 (exp_13 -> exp_14 .)
    BITWISE_AND     reduce using rule 64 (exp_13 -> exp_14 .)
    BITWISE_EXC_OR  reduce using rule 64 (exp_13 -> exp_14 .)
    BITWISE_OR      reduce using rule 64 (exp_13 -> exp_14 .)
    EQUAL           reduce using rule 64 (exp_13 -> exp_14 .)
    DIF             reduce using rule 64 (exp_13 -> exp_14 .)
    BIGGER_EQUAL    reduce using rule 64 (exp_13 -> exp_14 .)
    LESS_EQUAL      reduce using rule 64 (exp_13 -> exp_14 .)
    BIGGER_THAN     reduce using rule 64 (exp_13 -> exp_14 .)
    LESS_THAN       reduce using rule 64 (exp_13 -> exp_14 .)
    AND             reduce using rule 64 (exp_13 -> exp_14 .)
    OR              reduce using rule 64 (exp_13 -> exp_14 .)
    ASSIGN          reduce using rule 64 (exp_13 -> exp_14 .)
    NEWLINE         reduce using rule 64 (exp_13 -> exp_14 .)
    THEN            reduce using rule 64 (exp_13 -> exp_14 .)
    DO              reduce using rule 64 (exp_13 -> exp_14 .)
    IN              reduce using rule 64 (exp_13 -> exp_14 .)
    RKEY            reduce using rule 64 (exp_13 -> exp_14 .)
    RPAREN          reduce using rule 64 (exp_13 -> exp_14 .)
    RCOCHETE        reduce using rule 64 (exp_13 -> exp_14 .)
    SUM             shift and go to state 81


state 30

    (66) exp_14 -> exp_15 .
    (67) exp_15 -> exp_15 . MODULE exp_16

    SUM             reduce using rule 66 (exp_14 -> exp_15 .)
    SUB             reduce using rule 66 (exp_14 -> exp_15 .)
    CONCATENATION   reduce using rule 66 (exp_14 -> exp_15 .)
    BITWISE_AND     reduce using rule 66 (exp_14 -> exp_15 .)
    BITWISE_EXC_OR  reduce using rule 66 (exp_14 -> exp_15 .)
    BITWISE_OR      reduce using rule 66 (exp_14 -> exp_15 .)
    EQUAL           reduce using rule 66 (exp_14 -> exp_15 .)
    DIF             reduce using rule 66 (exp_14 -> exp_15 .)
    BIGGER_EQUAL    reduce using rule 66 (exp_14 -> exp_15 .)
    LESS_EQUAL      reduce using rule 66 (exp_14 -> exp_15 .)
    BIGGER_THAN     reduce using rule 66 (exp_14 -> exp_15 .)
    LESS_THAN       reduce using rule 66 (exp_14 -> exp_15 .)
    AND             reduce using rule 66 (exp_14 -> exp_15 .)
    OR              reduce using rule 66 (exp_14 -> exp_15 .)
    ASSIGN          reduce using rule 66 (exp_14 -> exp_15 .)
    NEWLINE         reduce using rule 66 (exp_14 -> exp_15 .)
    THEN            reduce using rule 66 (exp_14 -> exp_15 .)
    DO              reduce using rule 66 (exp_14 -> exp_15 .)
    IN              reduce using rule 66 (exp_14 -> exp_15 .)
    RKEY            reduce using rule 66 (exp_14 -> exp_15 .)
    RPAREN          reduce using rule 66 (exp_14 -> exp_15 .)
    RCOCHETE        reduce using rule 66 (exp_14 -> exp_15 .)
    MODULE          shift and go to state 82


state 31

    (68) exp_15 -> exp_16 .
    (69) exp_16 -> exp_16 . DIV_INT exp_17

    MODULE          reduce using rule 68 (exp_15 -> exp_16 .)
    SUM             reduce using rule 68 (exp_15 -> exp_16 .)
    SUB             reduce using rule 68 (exp_15 -> exp_16 .)
    CONCATENATION   reduce using rule 68 (exp_15 -> exp_16 .)
    BITWISE_AND     reduce using rule 68 (exp_15 -> exp_16 .)
    BITWISE_EXC_OR  reduce using rule 68 (exp_15 -> exp_16 .)
    BITWISE_OR      reduce using rule 68 (exp_15 -> exp_16 .)
    EQUAL           reduce using rule 68 (exp_15 -> exp_16 .)
    DIF             reduce using rule 68 (exp_15 -> exp_16 .)
    BIGGER_EQUAL    reduce using rule 68 (exp_15 -> exp_16 .)
    LESS_EQUAL      reduce using rule 68 (exp_15 -> exp_16 .)
    BIGGER_THAN     reduce using rule 68 (exp_15 -> exp_16 .)
    LESS_THAN       reduce using rule 68 (exp_15 -> exp_16 .)
    AND             reduce using rule 68 (exp_15 -> exp_16 .)
    OR              reduce using rule 68 (exp_15 -> exp_16 .)
    ASSIGN          reduce using rule 68 (exp_15 -> exp_16 .)
    NEWLINE         reduce using rule 68 (exp_15 -> exp_16 .)
    THEN            reduce using rule 68 (exp_15 -> exp_16 .)
    DO              reduce using rule 68 (exp_15 -> exp_16 .)
    IN              reduce using rule 68 (exp_15 -> exp_16 .)
    RKEY            reduce using rule 68 (exp_15 -> exp_16 .)
    RPAREN          reduce using rule 68 (exp_15 -> exp_16 .)
    RCOCHETE        reduce using rule 68 (exp_15 -> exp_16 .)
    DIV_INT         shift and go to state 83


state 32

    (70) exp_16 -> exp_17 .
    (71) exp_17 -> exp_17 . DIV exp_18

    DIV_INT         reduce using rule 70 (exp_16 -> exp_17 .)
    MODULE          reduce using rule 70 (exp_16 -> exp_17 .)
    SUM             reduce using rule 70 (exp_16 -> exp_17 .)
    SUB             reduce using rule 70 (exp_16 -> exp_17 .)
    CONCATENATION   reduce using rule 70 (exp_16 -> exp_17 .)
    BITWISE_AND     reduce using rule 70 (exp_16 -> exp_17 .)
    BITWISE_EXC_OR  reduce using rule 70 (exp_16 -> exp_17 .)
    BITWISE_OR      reduce using rule 70 (exp_16 -> exp_17 .)
    EQUAL           reduce using rule 70 (exp_16 -> exp_17 .)
    DIF             reduce using rule 70 (exp_16 -> exp_17 .)
    BIGGER_EQUAL    reduce using rule 70 (exp_16 -> exp_17 .)
    LESS_EQUAL      reduce using rule 70 (exp_16 -> exp_17 .)
    BIGGER_THAN     reduce using rule 70 (exp_16 -> exp_17 .)
    LESS_THAN       reduce using rule 70 (exp_16 -> exp_17 .)
    AND             reduce using rule 70 (exp_16 -> exp_17 .)
    OR              reduce using rule 70 (exp_16 -> exp_17 .)
    ASSIGN          reduce using rule 70 (exp_16 -> exp_17 .)
    NEWLINE         reduce using rule 70 (exp_16 -> exp_17 .)
    THEN            reduce using rule 70 (exp_16 -> exp_17 .)
    DO              reduce using rule 70 (exp_16 -> exp_17 .)
    IN              reduce using rule 70 (exp_16 -> exp_17 .)
    RKEY            reduce using rule 70 (exp_16 -> exp_17 .)
    RPAREN          reduce using rule 70 (exp_16 -> exp_17 .)
    RCOCHETE        reduce using rule 70 (exp_16 -> exp_17 .)
    DIV             shift and go to state 84


state 33

    (72) exp_17 -> exp_18 .
    (73) exp_18 -> exp_18 . MULT exp_19

    DIV             reduce using rule 72 (exp_17 -> exp_18 .)
    DIV_INT         reduce using rule 72 (exp_17 -> exp_18 .)
    MODULE          reduce using rule 72 (exp_17 -> exp_18 .)
    SUM             reduce using rule 72 (exp_17 -> exp_18 .)
    SUB             reduce using rule 72 (exp_17 -> exp_18 .)
    CONCATENATION   reduce using rule 72 (exp_17 -> exp_18 .)
    BITWISE_AND     reduce using rule 72 (exp_17 -> exp_18 .)
    BITWISE_EXC_OR  reduce using rule 72 (exp_17 -> exp_18 .)
    BITWISE_OR      reduce using rule 72 (exp_17 -> exp_18 .)
    EQUAL           reduce using rule 72 (exp_17 -> exp_18 .)
    DIF             reduce using rule 72 (exp_17 -> exp_18 .)
    BIGGER_EQUAL    reduce using rule 72 (exp_17 -> exp_18 .)
    LESS_EQUAL      reduce using rule 72 (exp_17 -> exp_18 .)
    BIGGER_THAN     reduce using rule 72 (exp_17 -> exp_18 .)
    LESS_THAN       reduce using rule 72 (exp_17 -> exp_18 .)
    AND             reduce using rule 72 (exp_17 -> exp_18 .)
    OR              reduce using rule 72 (exp_17 -> exp_18 .)
    ASSIGN          reduce using rule 72 (exp_17 -> exp_18 .)
    NEWLINE         reduce using rule 72 (exp_17 -> exp_18 .)
    THEN            reduce using rule 72 (exp_17 -> exp_18 .)
    DO              reduce using rule 72 (exp_17 -> exp_18 .)
    IN              reduce using rule 72 (exp_17 -> exp_18 .)
    RKEY            reduce using rule 72 (exp_17 -> exp_18 .)
    RPAREN          reduce using rule 72 (exp_17 -> exp_18 .)
    RCOCHETE        reduce using rule 72 (exp_17 -> exp_18 .)
    MULT            shift and go to state 85


state 34

    (74) exp_18 -> exp_19 .
    (75) exp_19 -> exp_19 . NOT exp_20

    MULT            reduce using rule 74 (exp_18 -> exp_19 .)
    DIV             reduce using rule 74 (exp_18 -> exp_19 .)
    DIV_INT         reduce using rule 74 (exp_18 -> exp_19 .)
    MODULE          reduce using rule 74 (exp_18 -> exp_19 .)
    SUM             reduce using rule 74 (exp_18 -> exp_19 .)
    SUB             reduce using rule 74 (exp_18 -> exp_19 .)
    CONCATENATION   reduce using rule 74 (exp_18 -> exp_19 .)
    BITWISE_AND     reduce using rule 74 (exp_18 -> exp_19 .)
    BITWISE_EXC_OR  reduce using rule 74 (exp_18 -> exp_19 .)
    BITWISE_OR      reduce using rule 74 (exp_18 -> exp_19 .)
    EQUAL           reduce using rule 74 (exp_18 -> exp_19 .)
    DIF             reduce using rule 74 (exp_18 -> exp_19 .)
    BIGGER_EQUAL    reduce using rule 74 (exp_18 -> exp_19 .)
    LESS_EQUAL      reduce using rule 74 (exp_18 -> exp_19 .)
    BIGGER_THAN     reduce using rule 74 (exp_18 -> exp_19 .)
    LESS_THAN       reduce using rule 74 (exp_18 -> exp_19 .)
    AND             reduce using rule 74 (exp_18 -> exp_19 .)
    OR              reduce using rule 74 (exp_18 -> exp_19 .)
    ASSIGN          reduce using rule 74 (exp_18 -> exp_19 .)
    NEWLINE         reduce using rule 74 (exp_18 -> exp_19 .)
    THEN            reduce using rule 74 (exp_18 -> exp_19 .)
    DO              reduce using rule 74 (exp_18 -> exp_19 .)
    IN              reduce using rule 74 (exp_18 -> exp_19 .)
    RKEY            reduce using rule 74 (exp_18 -> exp_19 .)
    RPAREN          reduce using rule 74 (exp_18 -> exp_19 .)
    RCOCHETE        reduce using rule 74 (exp_18 -> exp_19 .)
    NOT             shift and go to state 86


state 35

    (76) exp_19 -> exp_20 .

    NOT             reduce using rule 76 (exp_19 -> exp_20 .)
    MULT            reduce using rule 76 (exp_19 -> exp_20 .)
    DIV             reduce using rule 76 (exp_19 -> exp_20 .)
    DIV_INT         reduce using rule 76 (exp_19 -> exp_20 .)
    MODULE          reduce using rule 76 (exp_19 -> exp_20 .)
    SUM             reduce using rule 76 (exp_19 -> exp_20 .)
    SUB             reduce using rule 76 (exp_19 -> exp_20 .)
    CONCATENATION   reduce using rule 76 (exp_19 -> exp_20 .)
    BITWISE_AND     reduce using rule 76 (exp_19 -> exp_20 .)
    BITWISE_EXC_OR  reduce using rule 76 (exp_19 -> exp_20 .)
    BITWISE_OR      reduce using rule 76 (exp_19 -> exp_20 .)
    EQUAL           reduce using rule 76 (exp_19 -> exp_20 .)
    DIF             reduce using rule 76 (exp_19 -> exp_20 .)
    BIGGER_EQUAL    reduce using rule 76 (exp_19 -> exp_20 .)
    LESS_EQUAL      reduce using rule 76 (exp_19 -> exp_20 .)
    BIGGER_THAN     reduce using rule 76 (exp_19 -> exp_20 .)
    LESS_THAN       reduce using rule 76 (exp_19 -> exp_20 .)
    AND             reduce using rule 76 (exp_19 -> exp_20 .)
    OR              reduce using rule 76 (exp_19 -> exp_20 .)
    ASSIGN          reduce using rule 76 (exp_19 -> exp_20 .)
    NEWLINE         reduce using rule 76 (exp_19 -> exp_20 .)
    THEN            reduce using rule 76 (exp_19 -> exp_20 .)
    DO              reduce using rule 76 (exp_19 -> exp_20 .)
    IN              reduce using rule 76 (exp_19 -> exp_20 .)
    RKEY            reduce using rule 76 (exp_19 -> exp_20 .)
    RPAREN          reduce using rule 76 (exp_19 -> exp_20 .)
    RCOCHETE        reduce using rule 76 (exp_19 -> exp_20 .)


state 36

    (77) exp_20 -> DENIAL . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_20                         shift and go to state 87
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 37

    (78) exp_20 -> exp_21 .

    NOT             reduce using rule 78 (exp_20 -> exp_21 .)
    MULT            reduce using rule 78 (exp_20 -> exp_21 .)
    DIV             reduce using rule 78 (exp_20 -> exp_21 .)
    DIV_INT         reduce using rule 78 (exp_20 -> exp_21 .)
    MODULE          reduce using rule 78 (exp_20 -> exp_21 .)
    SUM             reduce using rule 78 (exp_20 -> exp_21 .)
    SUB             reduce using rule 78 (exp_20 -> exp_21 .)
    CONCATENATION   reduce using rule 78 (exp_20 -> exp_21 .)
    BITWISE_AND     reduce using rule 78 (exp_20 -> exp_21 .)
    BITWISE_EXC_OR  reduce using rule 78 (exp_20 -> exp_21 .)
    BITWISE_OR      reduce using rule 78 (exp_20 -> exp_21 .)
    EQUAL           reduce using rule 78 (exp_20 -> exp_21 .)
    DIF             reduce using rule 78 (exp_20 -> exp_21 .)
    BIGGER_EQUAL    reduce using rule 78 (exp_20 -> exp_21 .)
    LESS_EQUAL      reduce using rule 78 (exp_20 -> exp_21 .)
    BIGGER_THAN     reduce using rule 78 (exp_20 -> exp_21 .)
    LESS_THAN       reduce using rule 78 (exp_20 -> exp_21 .)
    AND             reduce using rule 78 (exp_20 -> exp_21 .)
    OR              reduce using rule 78 (exp_20 -> exp_21 .)
    ASSIGN          reduce using rule 78 (exp_20 -> exp_21 .)
    NEWLINE         reduce using rule 78 (exp_20 -> exp_21 .)
    THEN            reduce using rule 78 (exp_20 -> exp_21 .)
    DO              reduce using rule 78 (exp_20 -> exp_21 .)
    IN              reduce using rule 78 (exp_20 -> exp_21 .)
    RKEY            reduce using rule 78 (exp_20 -> exp_21 .)
    RPAREN          reduce using rule 78 (exp_20 -> exp_21 .)
    RCOCHETE        reduce using rule 78 (exp_20 -> exp_21 .)


state 38

    (79) exp_21 -> UNARY_BITWISE_NOT . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_21                         shift and go to state 88
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 39

    (80) exp_21 -> exp_22 .

    NOT             reduce using rule 80 (exp_21 -> exp_22 .)
    MULT            reduce using rule 80 (exp_21 -> exp_22 .)
    DIV             reduce using rule 80 (exp_21 -> exp_22 .)
    DIV_INT         reduce using rule 80 (exp_21 -> exp_22 .)
    MODULE          reduce using rule 80 (exp_21 -> exp_22 .)
    SUM             reduce using rule 80 (exp_21 -> exp_22 .)
    SUB             reduce using rule 80 (exp_21 -> exp_22 .)
    CONCATENATION   reduce using rule 80 (exp_21 -> exp_22 .)
    BITWISE_AND     reduce using rule 80 (exp_21 -> exp_22 .)
    BITWISE_EXC_OR  reduce using rule 80 (exp_21 -> exp_22 .)
    BITWISE_OR      reduce using rule 80 (exp_21 -> exp_22 .)
    EQUAL           reduce using rule 80 (exp_21 -> exp_22 .)
    DIF             reduce using rule 80 (exp_21 -> exp_22 .)
    BIGGER_EQUAL    reduce using rule 80 (exp_21 -> exp_22 .)
    LESS_EQUAL      reduce using rule 80 (exp_21 -> exp_22 .)
    BIGGER_THAN     reduce using rule 80 (exp_21 -> exp_22 .)
    LESS_THAN       reduce using rule 80 (exp_21 -> exp_22 .)
    AND             reduce using rule 80 (exp_21 -> exp_22 .)
    OR              reduce using rule 80 (exp_21 -> exp_22 .)
    ASSIGN          reduce using rule 80 (exp_21 -> exp_22 .)
    NEWLINE         reduce using rule 80 (exp_21 -> exp_22 .)
    THEN            reduce using rule 80 (exp_21 -> exp_22 .)
    DO              reduce using rule 80 (exp_21 -> exp_22 .)
    IN              reduce using rule 80 (exp_21 -> exp_22 .)
    RKEY            reduce using rule 80 (exp_21 -> exp_22 .)
    RPAREN          reduce using rule 80 (exp_21 -> exp_22 .)
    RCOCHETE        reduce using rule 80 (exp_21 -> exp_22 .)


state 40

    (81) exp_22 -> LENGHT . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_22                         shift and go to state 89
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 41

    (82) exp_22 -> exp_23 .
    (83) exp_23 -> exp_23 . POW exp_24

    NOT             reduce using rule 82 (exp_22 -> exp_23 .)
    MULT            reduce using rule 82 (exp_22 -> exp_23 .)
    DIV             reduce using rule 82 (exp_22 -> exp_23 .)
    DIV_INT         reduce using rule 82 (exp_22 -> exp_23 .)
    MODULE          reduce using rule 82 (exp_22 -> exp_23 .)
    SUM             reduce using rule 82 (exp_22 -> exp_23 .)
    SUB             reduce using rule 82 (exp_22 -> exp_23 .)
    CONCATENATION   reduce using rule 82 (exp_22 -> exp_23 .)
    BITWISE_AND     reduce using rule 82 (exp_22 -> exp_23 .)
    BITWISE_EXC_OR  reduce using rule 82 (exp_22 -> exp_23 .)
    BITWISE_OR      reduce using rule 82 (exp_22 -> exp_23 .)
    EQUAL           reduce using rule 82 (exp_22 -> exp_23 .)
    DIF             reduce using rule 82 (exp_22 -> exp_23 .)
    BIGGER_EQUAL    reduce using rule 82 (exp_22 -> exp_23 .)
    LESS_EQUAL      reduce using rule 82 (exp_22 -> exp_23 .)
    BIGGER_THAN     reduce using rule 82 (exp_22 -> exp_23 .)
    LESS_THAN       reduce using rule 82 (exp_22 -> exp_23 .)
    AND             reduce using rule 82 (exp_22 -> exp_23 .)
    OR              reduce using rule 82 (exp_22 -> exp_23 .)
    ASSIGN          reduce using rule 82 (exp_22 -> exp_23 .)
    NEWLINE         reduce using rule 82 (exp_22 -> exp_23 .)
    THEN            reduce using rule 82 (exp_22 -> exp_23 .)
    DO              reduce using rule 82 (exp_22 -> exp_23 .)
    IN              reduce using rule 82 (exp_22 -> exp_23 .)
    RKEY            reduce using rule 82 (exp_22 -> exp_23 .)
    RPAREN          reduce using rule 82 (exp_22 -> exp_23 .)
    RCOCHETE        reduce using rule 82 (exp_22 -> exp_23 .)
    POW             shift and go to state 90


state 42

    (84) exp_23 -> exp_24 .
    (85) exp_24 -> exp_24 . COMMA exp_25
    (86) exp_24 -> exp_24 . DOT exp_25

    POW             reduce using rule 84 (exp_23 -> exp_24 .)
    NOT             reduce using rule 84 (exp_23 -> exp_24 .)
    MULT            reduce using rule 84 (exp_23 -> exp_24 .)
    DIV             reduce using rule 84 (exp_23 -> exp_24 .)
    DIV_INT         reduce using rule 84 (exp_23 -> exp_24 .)
    MODULE          reduce using rule 84 (exp_23 -> exp_24 .)
    SUM             reduce using rule 84 (exp_23 -> exp_24 .)
    SUB             reduce using rule 84 (exp_23 -> exp_24 .)
    CONCATENATION   reduce using rule 84 (exp_23 -> exp_24 .)
    BITWISE_AND     reduce using rule 84 (exp_23 -> exp_24 .)
    BITWISE_EXC_OR  reduce using rule 84 (exp_23 -> exp_24 .)
    BITWISE_OR      reduce using rule 84 (exp_23 -> exp_24 .)
    EQUAL           reduce using rule 84 (exp_23 -> exp_24 .)
    DIF             reduce using rule 84 (exp_23 -> exp_24 .)
    BIGGER_EQUAL    reduce using rule 84 (exp_23 -> exp_24 .)
    LESS_EQUAL      reduce using rule 84 (exp_23 -> exp_24 .)
    BIGGER_THAN     reduce using rule 84 (exp_23 -> exp_24 .)
    LESS_THAN       reduce using rule 84 (exp_23 -> exp_24 .)
    AND             reduce using rule 84 (exp_23 -> exp_24 .)
    OR              reduce using rule 84 (exp_23 -> exp_24 .)
    ASSIGN          reduce using rule 84 (exp_23 -> exp_24 .)
    NEWLINE         reduce using rule 84 (exp_23 -> exp_24 .)
    THEN            reduce using rule 84 (exp_23 -> exp_24 .)
    DO              reduce using rule 84 (exp_23 -> exp_24 .)
    IN              reduce using rule 84 (exp_23 -> exp_24 .)
    RKEY            reduce using rule 84 (exp_23 -> exp_24 .)
    RPAREN          reduce using rule 84 (exp_23 -> exp_24 .)
    RCOCHETE        reduce using rule 84 (exp_23 -> exp_24 .)
    COMMA           shift and go to state 91
    DOT             shift and go to state 92


state 43

    (89) exp_24 -> exp_25 .

    COMMA           reduce using rule 89 (exp_24 -> exp_25 .)
    DOT             reduce using rule 89 (exp_24 -> exp_25 .)
    POW             reduce using rule 89 (exp_24 -> exp_25 .)
    NOT             reduce using rule 89 (exp_24 -> exp_25 .)
    MULT            reduce using rule 89 (exp_24 -> exp_25 .)
    DIV             reduce using rule 89 (exp_24 -> exp_25 .)
    DIV_INT         reduce using rule 89 (exp_24 -> exp_25 .)
    MODULE          reduce using rule 89 (exp_24 -> exp_25 .)
    SUM             reduce using rule 89 (exp_24 -> exp_25 .)
    SUB             reduce using rule 89 (exp_24 -> exp_25 .)
    CONCATENATION   reduce using rule 89 (exp_24 -> exp_25 .)
    BITWISE_AND     reduce using rule 89 (exp_24 -> exp_25 .)
    BITWISE_EXC_OR  reduce using rule 89 (exp_24 -> exp_25 .)
    BITWISE_OR      reduce using rule 89 (exp_24 -> exp_25 .)
    EQUAL           reduce using rule 89 (exp_24 -> exp_25 .)
    DIF             reduce using rule 89 (exp_24 -> exp_25 .)
    BIGGER_EQUAL    reduce using rule 89 (exp_24 -> exp_25 .)
    LESS_EQUAL      reduce using rule 89 (exp_24 -> exp_25 .)
    BIGGER_THAN     reduce using rule 89 (exp_24 -> exp_25 .)
    LESS_THAN       reduce using rule 89 (exp_24 -> exp_25 .)
    AND             reduce using rule 89 (exp_24 -> exp_25 .)
    OR              reduce using rule 89 (exp_24 -> exp_25 .)
    ASSIGN          reduce using rule 89 (exp_24 -> exp_25 .)
    NEWLINE         reduce using rule 89 (exp_24 -> exp_25 .)
    THEN            reduce using rule 89 (exp_24 -> exp_25 .)
    DO              reduce using rule 89 (exp_24 -> exp_25 .)
    IN              reduce using rule 89 (exp_24 -> exp_25 .)
    RKEY            reduce using rule 89 (exp_24 -> exp_25 .)
    RPAREN          reduce using rule 89 (exp_24 -> exp_25 .)
    RCOCHETE        reduce using rule 89 (exp_24 -> exp_25 .)


state 44

    (87) exp_24 -> array .

    COMMA           reduce using rule 87 (exp_24 -> array .)
    DOT             reduce using rule 87 (exp_24 -> array .)
    POW             reduce using rule 87 (exp_24 -> array .)
    NOT             reduce using rule 87 (exp_24 -> array .)
    MULT            reduce using rule 87 (exp_24 -> array .)
    DIV             reduce using rule 87 (exp_24 -> array .)
    DIV_INT         reduce using rule 87 (exp_24 -> array .)
    MODULE          reduce using rule 87 (exp_24 -> array .)
    SUM             reduce using rule 87 (exp_24 -> array .)
    SUB             reduce using rule 87 (exp_24 -> array .)
    CONCATENATION   reduce using rule 87 (exp_24 -> array .)
    BITWISE_AND     reduce using rule 87 (exp_24 -> array .)
    BITWISE_EXC_OR  reduce using rule 87 (exp_24 -> array .)
    BITWISE_OR      reduce using rule 87 (exp_24 -> array .)
    EQUAL           reduce using rule 87 (exp_24 -> array .)
    DIF             reduce using rule 87 (exp_24 -> array .)
    BIGGER_EQUAL    reduce using rule 87 (exp_24 -> array .)
    LESS_EQUAL      reduce using rule 87 (exp_24 -> array .)
    BIGGER_THAN     reduce using rule 87 (exp_24 -> array .)
    LESS_THAN       reduce using rule 87 (exp_24 -> array .)
    AND             reduce using rule 87 (exp_24 -> array .)
    OR              reduce using rule 87 (exp_24 -> array .)
    ASSIGN          reduce using rule 87 (exp_24 -> array .)
    NEWLINE         reduce using rule 87 (exp_24 -> array .)
    THEN            reduce using rule 87 (exp_24 -> array .)
    DO              reduce using rule 87 (exp_24 -> array .)
    IN              reduce using rule 87 (exp_24 -> array .)
    RKEY            reduce using rule 87 (exp_24 -> array .)
    RPAREN          reduce using rule 87 (exp_24 -> array .)
    RCOCHETE        reduce using rule 87 (exp_24 -> array .)


state 45

    (88) exp_24 -> call .

    COMMA           reduce using rule 88 (exp_24 -> call .)
    DOT             reduce using rule 88 (exp_24 -> call .)
    POW             reduce using rule 88 (exp_24 -> call .)
    NOT             reduce using rule 88 (exp_24 -> call .)
    MULT            reduce using rule 88 (exp_24 -> call .)
    DIV             reduce using rule 88 (exp_24 -> call .)
    DIV_INT         reduce using rule 88 (exp_24 -> call .)
    MODULE          reduce using rule 88 (exp_24 -> call .)
    SUM             reduce using rule 88 (exp_24 -> call .)
    SUB             reduce using rule 88 (exp_24 -> call .)
    CONCATENATION   reduce using rule 88 (exp_24 -> call .)
    BITWISE_AND     reduce using rule 88 (exp_24 -> call .)
    BITWISE_EXC_OR  reduce using rule 88 (exp_24 -> call .)
    BITWISE_OR      reduce using rule 88 (exp_24 -> call .)
    EQUAL           reduce using rule 88 (exp_24 -> call .)
    DIF             reduce using rule 88 (exp_24 -> call .)
    BIGGER_EQUAL    reduce using rule 88 (exp_24 -> call .)
    LESS_EQUAL      reduce using rule 88 (exp_24 -> call .)
    BIGGER_THAN     reduce using rule 88 (exp_24 -> call .)
    LESS_THAN       reduce using rule 88 (exp_24 -> call .)
    AND             reduce using rule 88 (exp_24 -> call .)
    OR              reduce using rule 88 (exp_24 -> call .)
    ASSIGN          reduce using rule 88 (exp_24 -> call .)
    NEWLINE         reduce using rule 88 (exp_24 -> call .)
    THEN            reduce using rule 88 (exp_24 -> call .)
    DO              reduce using rule 88 (exp_24 -> call .)
    IN              reduce using rule 88 (exp_24 -> call .)
    RKEY            reduce using rule 88 (exp_24 -> call .)
    RPAREN          reduce using rule 88 (exp_24 -> call .)
    RCOCHETE        reduce using rule 88 (exp_24 -> call .)


state 46

    (33) array -> LKEY . exp RKEY
    (34) array -> LKEY . RKEY
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    RKEY            shift and go to state 94
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 93
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 47

    (35) array -> ID . LCOCHETE exp RCOCHETE
    (36) array -> ID . LCOCHETE RCOCHETE
    (31) call -> ID . LPAREN exp RPAREN
    (32) call -> ID . LPAREN RPAREN
    (93) exp_25 -> ID .

    LCOCHETE        shift and go to state 95
    LPAREN          shift and go to state 96
    COMMA           reduce using rule 93 (exp_25 -> ID .)
    DOT             reduce using rule 93 (exp_25 -> ID .)
    POW             reduce using rule 93 (exp_25 -> ID .)
    NOT             reduce using rule 93 (exp_25 -> ID .)
    MULT            reduce using rule 93 (exp_25 -> ID .)
    DIV             reduce using rule 93 (exp_25 -> ID .)
    DIV_INT         reduce using rule 93 (exp_25 -> ID .)
    MODULE          reduce using rule 93 (exp_25 -> ID .)
    SUM             reduce using rule 93 (exp_25 -> ID .)
    SUB             reduce using rule 93 (exp_25 -> ID .)
    CONCATENATION   reduce using rule 93 (exp_25 -> ID .)
    BITWISE_AND     reduce using rule 93 (exp_25 -> ID .)
    BITWISE_EXC_OR  reduce using rule 93 (exp_25 -> ID .)
    BITWISE_OR      reduce using rule 93 (exp_25 -> ID .)
    EQUAL           reduce using rule 93 (exp_25 -> ID .)
    DIF             reduce using rule 93 (exp_25 -> ID .)
    BIGGER_EQUAL    reduce using rule 93 (exp_25 -> ID .)
    LESS_EQUAL      reduce using rule 93 (exp_25 -> ID .)
    BIGGER_THAN     reduce using rule 93 (exp_25 -> ID .)
    LESS_THAN       reduce using rule 93 (exp_25 -> ID .)
    AND             reduce using rule 93 (exp_25 -> ID .)
    OR              reduce using rule 93 (exp_25 -> ID .)
    ASSIGN          reduce using rule 93 (exp_25 -> ID .)
    NEWLINE         reduce using rule 93 (exp_25 -> ID .)
    THEN            reduce using rule 93 (exp_25 -> ID .)
    DO              reduce using rule 93 (exp_25 -> ID .)
    IN              reduce using rule 93 (exp_25 -> ID .)
    RKEY            reduce using rule 93 (exp_25 -> ID .)
    RPAREN          reduce using rule 93 (exp_25 -> ID .)
    RCOCHETE        reduce using rule 93 (exp_25 -> ID .)


state 48

    (90) exp_25 -> NUMBER .

    COMMA           reduce using rule 90 (exp_25 -> NUMBER .)
    DOT             reduce using rule 90 (exp_25 -> NUMBER .)
    POW             reduce using rule 90 (exp_25 -> NUMBER .)
    NOT             reduce using rule 90 (exp_25 -> NUMBER .)
    MULT            reduce using rule 90 (exp_25 -> NUMBER .)
    DIV             reduce using rule 90 (exp_25 -> NUMBER .)
    DIV_INT         reduce using rule 90 (exp_25 -> NUMBER .)
    MODULE          reduce using rule 90 (exp_25 -> NUMBER .)
    SUM             reduce using rule 90 (exp_25 -> NUMBER .)
    SUB             reduce using rule 90 (exp_25 -> NUMBER .)
    CONCATENATION   reduce using rule 90 (exp_25 -> NUMBER .)
    BITWISE_AND     reduce using rule 90 (exp_25 -> NUMBER .)
    BITWISE_EXC_OR  reduce using rule 90 (exp_25 -> NUMBER .)
    BITWISE_OR      reduce using rule 90 (exp_25 -> NUMBER .)
    EQUAL           reduce using rule 90 (exp_25 -> NUMBER .)
    DIF             reduce using rule 90 (exp_25 -> NUMBER .)
    BIGGER_EQUAL    reduce using rule 90 (exp_25 -> NUMBER .)
    LESS_EQUAL      reduce using rule 90 (exp_25 -> NUMBER .)
    BIGGER_THAN     reduce using rule 90 (exp_25 -> NUMBER .)
    LESS_THAN       reduce using rule 90 (exp_25 -> NUMBER .)
    AND             reduce using rule 90 (exp_25 -> NUMBER .)
    OR              reduce using rule 90 (exp_25 -> NUMBER .)
    ASSIGN          reduce using rule 90 (exp_25 -> NUMBER .)
    NEWLINE         reduce using rule 90 (exp_25 -> NUMBER .)
    THEN            reduce using rule 90 (exp_25 -> NUMBER .)
    DO              reduce using rule 90 (exp_25 -> NUMBER .)
    IN              reduce using rule 90 (exp_25 -> NUMBER .)
    RKEY            reduce using rule 90 (exp_25 -> NUMBER .)
    RPAREN          reduce using rule 90 (exp_25 -> NUMBER .)
    RCOCHETE        reduce using rule 90 (exp_25 -> NUMBER .)


state 49

    (91) exp_25 -> STRING .

    COMMA           reduce using rule 91 (exp_25 -> STRING .)
    DOT             reduce using rule 91 (exp_25 -> STRING .)
    POW             reduce using rule 91 (exp_25 -> STRING .)
    NOT             reduce using rule 91 (exp_25 -> STRING .)
    MULT            reduce using rule 91 (exp_25 -> STRING .)
    DIV             reduce using rule 91 (exp_25 -> STRING .)
    DIV_INT         reduce using rule 91 (exp_25 -> STRING .)
    MODULE          reduce using rule 91 (exp_25 -> STRING .)
    SUM             reduce using rule 91 (exp_25 -> STRING .)
    SUB             reduce using rule 91 (exp_25 -> STRING .)
    CONCATENATION   reduce using rule 91 (exp_25 -> STRING .)
    BITWISE_AND     reduce using rule 91 (exp_25 -> STRING .)
    BITWISE_EXC_OR  reduce using rule 91 (exp_25 -> STRING .)
    BITWISE_OR      reduce using rule 91 (exp_25 -> STRING .)
    EQUAL           reduce using rule 91 (exp_25 -> STRING .)
    DIF             reduce using rule 91 (exp_25 -> STRING .)
    BIGGER_EQUAL    reduce using rule 91 (exp_25 -> STRING .)
    LESS_EQUAL      reduce using rule 91 (exp_25 -> STRING .)
    BIGGER_THAN     reduce using rule 91 (exp_25 -> STRING .)
    LESS_THAN       reduce using rule 91 (exp_25 -> STRING .)
    AND             reduce using rule 91 (exp_25 -> STRING .)
    OR              reduce using rule 91 (exp_25 -> STRING .)
    ASSIGN          reduce using rule 91 (exp_25 -> STRING .)
    NEWLINE         reduce using rule 91 (exp_25 -> STRING .)
    THEN            reduce using rule 91 (exp_25 -> STRING .)
    DO              reduce using rule 91 (exp_25 -> STRING .)
    IN              reduce using rule 91 (exp_25 -> STRING .)
    RKEY            reduce using rule 91 (exp_25 -> STRING .)
    RPAREN          reduce using rule 91 (exp_25 -> STRING .)
    RCOCHETE        reduce using rule 91 (exp_25 -> STRING .)


state 50

    (94) exp_25 -> NIL .

    COMMA           reduce using rule 94 (exp_25 -> NIL .)
    DOT             reduce using rule 94 (exp_25 -> NIL .)
    POW             reduce using rule 94 (exp_25 -> NIL .)
    NOT             reduce using rule 94 (exp_25 -> NIL .)
    MULT            reduce using rule 94 (exp_25 -> NIL .)
    DIV             reduce using rule 94 (exp_25 -> NIL .)
    DIV_INT         reduce using rule 94 (exp_25 -> NIL .)
    MODULE          reduce using rule 94 (exp_25 -> NIL .)
    SUM             reduce using rule 94 (exp_25 -> NIL .)
    SUB             reduce using rule 94 (exp_25 -> NIL .)
    CONCATENATION   reduce using rule 94 (exp_25 -> NIL .)
    BITWISE_AND     reduce using rule 94 (exp_25 -> NIL .)
    BITWISE_EXC_OR  reduce using rule 94 (exp_25 -> NIL .)
    BITWISE_OR      reduce using rule 94 (exp_25 -> NIL .)
    EQUAL           reduce using rule 94 (exp_25 -> NIL .)
    DIF             reduce using rule 94 (exp_25 -> NIL .)
    BIGGER_EQUAL    reduce using rule 94 (exp_25 -> NIL .)
    LESS_EQUAL      reduce using rule 94 (exp_25 -> NIL .)
    BIGGER_THAN     reduce using rule 94 (exp_25 -> NIL .)
    LESS_THAN       reduce using rule 94 (exp_25 -> NIL .)
    AND             reduce using rule 94 (exp_25 -> NIL .)
    OR              reduce using rule 94 (exp_25 -> NIL .)
    ASSIGN          reduce using rule 94 (exp_25 -> NIL .)
    NEWLINE         reduce using rule 94 (exp_25 -> NIL .)
    THEN            reduce using rule 94 (exp_25 -> NIL .)
    DO              reduce using rule 94 (exp_25 -> NIL .)
    IN              reduce using rule 94 (exp_25 -> NIL .)
    RKEY            reduce using rule 94 (exp_25 -> NIL .)
    RPAREN          reduce using rule 94 (exp_25 -> NIL .)
    RCOCHETE        reduce using rule 94 (exp_25 -> NIL .)


state 51

    (95) exp_25 -> TRUE .

    COMMA           reduce using rule 95 (exp_25 -> TRUE .)
    DOT             reduce using rule 95 (exp_25 -> TRUE .)
    POW             reduce using rule 95 (exp_25 -> TRUE .)
    NOT             reduce using rule 95 (exp_25 -> TRUE .)
    MULT            reduce using rule 95 (exp_25 -> TRUE .)
    DIV             reduce using rule 95 (exp_25 -> TRUE .)
    DIV_INT         reduce using rule 95 (exp_25 -> TRUE .)
    MODULE          reduce using rule 95 (exp_25 -> TRUE .)
    SUM             reduce using rule 95 (exp_25 -> TRUE .)
    SUB             reduce using rule 95 (exp_25 -> TRUE .)
    CONCATENATION   reduce using rule 95 (exp_25 -> TRUE .)
    BITWISE_AND     reduce using rule 95 (exp_25 -> TRUE .)
    BITWISE_EXC_OR  reduce using rule 95 (exp_25 -> TRUE .)
    BITWISE_OR      reduce using rule 95 (exp_25 -> TRUE .)
    EQUAL           reduce using rule 95 (exp_25 -> TRUE .)
    DIF             reduce using rule 95 (exp_25 -> TRUE .)
    BIGGER_EQUAL    reduce using rule 95 (exp_25 -> TRUE .)
    LESS_EQUAL      reduce using rule 95 (exp_25 -> TRUE .)
    BIGGER_THAN     reduce using rule 95 (exp_25 -> TRUE .)
    LESS_THAN       reduce using rule 95 (exp_25 -> TRUE .)
    AND             reduce using rule 95 (exp_25 -> TRUE .)
    OR              reduce using rule 95 (exp_25 -> TRUE .)
    ASSIGN          reduce using rule 95 (exp_25 -> TRUE .)
    NEWLINE         reduce using rule 95 (exp_25 -> TRUE .)
    THEN            reduce using rule 95 (exp_25 -> TRUE .)
    DO              reduce using rule 95 (exp_25 -> TRUE .)
    IN              reduce using rule 95 (exp_25 -> TRUE .)
    RKEY            reduce using rule 95 (exp_25 -> TRUE .)
    RPAREN          reduce using rule 95 (exp_25 -> TRUE .)
    RCOCHETE        reduce using rule 95 (exp_25 -> TRUE .)


state 52

    (96) exp_25 -> FALSE .

    COMMA           reduce using rule 96 (exp_25 -> FALSE .)
    DOT             reduce using rule 96 (exp_25 -> FALSE .)
    POW             reduce using rule 96 (exp_25 -> FALSE .)
    NOT             reduce using rule 96 (exp_25 -> FALSE .)
    MULT            reduce using rule 96 (exp_25 -> FALSE .)
    DIV             reduce using rule 96 (exp_25 -> FALSE .)
    DIV_INT         reduce using rule 96 (exp_25 -> FALSE .)
    MODULE          reduce using rule 96 (exp_25 -> FALSE .)
    SUM             reduce using rule 96 (exp_25 -> FALSE .)
    SUB             reduce using rule 96 (exp_25 -> FALSE .)
    CONCATENATION   reduce using rule 96 (exp_25 -> FALSE .)
    BITWISE_AND     reduce using rule 96 (exp_25 -> FALSE .)
    BITWISE_EXC_OR  reduce using rule 96 (exp_25 -> FALSE .)
    BITWISE_OR      reduce using rule 96 (exp_25 -> FALSE .)
    EQUAL           reduce using rule 96 (exp_25 -> FALSE .)
    DIF             reduce using rule 96 (exp_25 -> FALSE .)
    BIGGER_EQUAL    reduce using rule 96 (exp_25 -> FALSE .)
    LESS_EQUAL      reduce using rule 96 (exp_25 -> FALSE .)
    BIGGER_THAN     reduce using rule 96 (exp_25 -> FALSE .)
    LESS_THAN       reduce using rule 96 (exp_25 -> FALSE .)
    AND             reduce using rule 96 (exp_25 -> FALSE .)
    OR              reduce using rule 96 (exp_25 -> FALSE .)
    ASSIGN          reduce using rule 96 (exp_25 -> FALSE .)
    NEWLINE         reduce using rule 96 (exp_25 -> FALSE .)
    THEN            reduce using rule 96 (exp_25 -> FALSE .)
    DO              reduce using rule 96 (exp_25 -> FALSE .)
    IN              reduce using rule 96 (exp_25 -> FALSE .)
    RKEY            reduce using rule 96 (exp_25 -> FALSE .)
    RPAREN          reduce using rule 96 (exp_25 -> FALSE .)
    RCOCHETE        reduce using rule 96 (exp_25 -> FALSE .)


state 53

    (1) program -> comand NEWLINE .
    (4) program -> comand NEWLINE . program
    (1) program -> . comand NEWLINE
    (2) program -> . function NEWLINE
    (3) program -> . local_function NEWLINE
    (4) program -> . comand NEWLINE program
    (5) program -> . function NEWLINE program
    (6) program -> . local_function NEWLINE program
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (7) function -> . FUNCTION signature comands END
    (8) local_function -> . LOCAL FUNCTION signature comands END
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    $end            reduce using rule 1 (program -> comand NEWLINE .)
    IF              shift and go to state 5
    FUNCTION        shift and go to state 7
    LOCAL           shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comand                         shift and go to state 2
    program                        shift and go to state 97
    function                       shift and go to state 3
    local_function                 shift and go to state 4
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 54

    (2) program -> function NEWLINE .
    (5) program -> function NEWLINE . program
    (1) program -> . comand NEWLINE
    (2) program -> . function NEWLINE
    (3) program -> . local_function NEWLINE
    (4) program -> . comand NEWLINE program
    (5) program -> . function NEWLINE program
    (6) program -> . local_function NEWLINE program
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (7) function -> . FUNCTION signature comands END
    (8) local_function -> . LOCAL FUNCTION signature comands END
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    $end            reduce using rule 2 (program -> function NEWLINE .)
    IF              shift and go to state 5
    FUNCTION        shift and go to state 7
    LOCAL           shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    function                       shift and go to state 3
    program                        shift and go to state 98
    comand                         shift and go to state 2
    local_function                 shift and go to state 4
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 55

    (3) program -> local_function NEWLINE .
    (6) program -> local_function NEWLINE . program
    (1) program -> . comand NEWLINE
    (2) program -> . function NEWLINE
    (3) program -> . local_function NEWLINE
    (4) program -> . comand NEWLINE program
    (5) program -> . function NEWLINE program
    (6) program -> . local_function NEWLINE program
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (7) function -> . FUNCTION signature comands END
    (8) local_function -> . LOCAL FUNCTION signature comands END
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    $end            reduce using rule 3 (program -> local_function NEWLINE .)
    IF              shift and go to state 5
    FUNCTION        shift and go to state 7
    LOCAL           shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    local_function                 shift and go to state 4
    program                        shift and go to state 99
    comand                         shift and go to state 2
    function                       shift and go to state 3
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 56

    (15) comand -> IF list_exp . THEN comands END
    (16) comand -> IF list_exp . THEN comands ELSE comands END
    (17) comand -> IF list_exp . THEN comands elseif ELSE comands

    THEN            shift and go to state 100


state 57

    (29) list_exp -> LPAREN . exp RPAREN
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 101
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 58

    (30) list_exp -> exp .
    (37) exp -> exp . ASSIGN exp_1

    THEN            reduce using rule 30 (list_exp -> exp .)
    DO              reduce using rule 30 (list_exp -> exp .)
    IN              reduce using rule 30 (list_exp -> exp .)
    ASSIGN          shift and go to state 65


state 59

    (92) exp_25 -> LOCAL . ID

    ID              shift and go to state 63


state 60

    (7) function -> FUNCTION signature . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 102
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 61

    (9) signature -> ID . LPAREN sigparams RPAREN
    (10) signature -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 62

    (8) local_function -> LOCAL FUNCTION . signature comands END
    (9) signature -> . ID LPAREN sigparams RPAREN
    (10) signature -> . ID LPAREN RPAREN

    ID              shift and go to state 61

    signature                      shift and go to state 105

state 63

    (92) exp_25 -> LOCAL ID .

    COMMA           reduce using rule 92 (exp_25 -> LOCAL ID .)
    DOT             reduce using rule 92 (exp_25 -> LOCAL ID .)
    POW             reduce using rule 92 (exp_25 -> LOCAL ID .)
    NOT             reduce using rule 92 (exp_25 -> LOCAL ID .)
    MULT            reduce using rule 92 (exp_25 -> LOCAL ID .)
    DIV             reduce using rule 92 (exp_25 -> LOCAL ID .)
    DIV_INT         reduce using rule 92 (exp_25 -> LOCAL ID .)
    MODULE          reduce using rule 92 (exp_25 -> LOCAL ID .)
    SUM             reduce using rule 92 (exp_25 -> LOCAL ID .)
    SUB             reduce using rule 92 (exp_25 -> LOCAL ID .)
    CONCATENATION   reduce using rule 92 (exp_25 -> LOCAL ID .)
    BITWISE_AND     reduce using rule 92 (exp_25 -> LOCAL ID .)
    BITWISE_EXC_OR  reduce using rule 92 (exp_25 -> LOCAL ID .)
    BITWISE_OR      reduce using rule 92 (exp_25 -> LOCAL ID .)
    EQUAL           reduce using rule 92 (exp_25 -> LOCAL ID .)
    DIF             reduce using rule 92 (exp_25 -> LOCAL ID .)
    BIGGER_EQUAL    reduce using rule 92 (exp_25 -> LOCAL ID .)
    LESS_EQUAL      reduce using rule 92 (exp_25 -> LOCAL ID .)
    BIGGER_THAN     reduce using rule 92 (exp_25 -> LOCAL ID .)
    LESS_THAN       reduce using rule 92 (exp_25 -> LOCAL ID .)
    AND             reduce using rule 92 (exp_25 -> LOCAL ID .)
    OR              reduce using rule 92 (exp_25 -> LOCAL ID .)
    ASSIGN          reduce using rule 92 (exp_25 -> LOCAL ID .)
    NEWLINE         reduce using rule 92 (exp_25 -> LOCAL ID .)
    THEN            reduce using rule 92 (exp_25 -> LOCAL ID .)
    DO              reduce using rule 92 (exp_25 -> LOCAL ID .)
    IN              reduce using rule 92 (exp_25 -> LOCAL ID .)
    RKEY            reduce using rule 92 (exp_25 -> LOCAL ID .)
    RPAREN          reduce using rule 92 (exp_25 -> LOCAL ID .)
    RCOCHETE        reduce using rule 92 (exp_25 -> LOCAL ID .)


state 64

    (21) other_comand -> WHILE list_exp . DO comands END

    DO              shift and go to state 106


state 65

    (37) exp -> exp ASSIGN . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_1                          shift and go to state 107
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 66

    (25) other_comand -> RETURN exp .
    (37) exp -> exp . ASSIGN exp_1

    NEWLINE         reduce using rule 25 (other_comand -> RETURN exp .)
    ASSIGN          shift and go to state 65


state 67

    (27) fordo -> FOR list_exp . DO comands END
    (28) forin -> FOR list_exp . IN exp DO comands END

    DO              shift and go to state 108
    IN              shift and go to state 109


state 68

    (39) exp_1 -> exp_1 OR . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_2                          shift and go to state 110
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 69

    (41) exp_2 -> exp_2 AND . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_3                          shift and go to state 111
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 70

    (43) exp_3 -> exp_3 LESS_THAN . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_4                          shift and go to state 112
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 71

    (45) exp_4 -> exp_4 BIGGER_THAN . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_5                          shift and go to state 113
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 72

    (47) exp_5 -> exp_5 LESS_EQUAL . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_6                          shift and go to state 114
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 73

    (49) exp_6 -> exp_6 BIGGER_EQUAL . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_7                          shift and go to state 115
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 74

    (51) exp_7 -> exp_7 DIF . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_8                          shift and go to state 116
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 75

    (53) exp_8 -> exp_8 EQUAL . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_9                          shift and go to state 117
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 76

    (55) exp_9 -> exp_9 BITWISE_OR . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_10                         shift and go to state 118
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 77

    (57) exp_10 -> exp_10 BITWISE_EXC_OR . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_11                         shift and go to state 119
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 78

    (59) exp_11 -> exp_11 BITWISE_AND . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_12                         shift and go to state 120
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 79

    (61) exp_12 -> exp_12 CONCATENATION . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_13                         shift and go to state 121
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 80

    (63) exp_13 -> exp_13 SUB . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_14                         shift and go to state 122
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 81

    (65) exp_14 -> exp_14 SUM . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_15                         shift and go to state 123
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 82

    (67) exp_15 -> exp_15 MODULE . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_16                         shift and go to state 124
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 83

    (69) exp_16 -> exp_16 DIV_INT . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_17                         shift and go to state 125
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 84

    (71) exp_17 -> exp_17 DIV . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_18                         shift and go to state 126
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 85

    (73) exp_18 -> exp_18 MULT . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_19                         shift and go to state 127
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 86

    (75) exp_19 -> exp_19 NOT . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_20                         shift and go to state 128
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 87

    (77) exp_20 -> DENIAL exp_20 .

    NOT             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    MULT            reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    DIV             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    DIV_INT         reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    MODULE          reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    SUM             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    SUB             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    CONCATENATION   reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    BITWISE_AND     reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    BITWISE_EXC_OR  reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    BITWISE_OR      reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    EQUAL           reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    DIF             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    BIGGER_EQUAL    reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    LESS_EQUAL      reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    BIGGER_THAN     reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    LESS_THAN       reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    AND             reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    OR              reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    ASSIGN          reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    NEWLINE         reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    THEN            reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    DO              reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    IN              reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    RKEY            reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    RPAREN          reduce using rule 77 (exp_20 -> DENIAL exp_20 .)
    RCOCHETE        reduce using rule 77 (exp_20 -> DENIAL exp_20 .)


state 88

    (79) exp_21 -> UNARY_BITWISE_NOT exp_21 .

    NOT             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    MULT            reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    DIV             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    DIV_INT         reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    MODULE          reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    SUM             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    SUB             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    CONCATENATION   reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    BITWISE_AND     reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    BITWISE_EXC_OR  reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    BITWISE_OR      reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    EQUAL           reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    DIF             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    BIGGER_EQUAL    reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    LESS_EQUAL      reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    BIGGER_THAN     reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    LESS_THAN       reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    AND             reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    OR              reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    ASSIGN          reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    NEWLINE         reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    THEN            reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    DO              reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    IN              reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    RKEY            reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    RPAREN          reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)
    RCOCHETE        reduce using rule 79 (exp_21 -> UNARY_BITWISE_NOT exp_21 .)


state 89

    (81) exp_22 -> LENGHT exp_22 .

    NOT             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    MULT            reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    DIV             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    DIV_INT         reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    MODULE          reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    SUM             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    SUB             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    CONCATENATION   reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    BITWISE_AND     reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    BITWISE_EXC_OR  reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    BITWISE_OR      reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    EQUAL           reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    DIF             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    BIGGER_EQUAL    reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    LESS_EQUAL      reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    BIGGER_THAN     reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    LESS_THAN       reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    AND             reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    OR              reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    ASSIGN          reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    NEWLINE         reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    THEN            reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    DO              reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    IN              reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    RKEY            reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    RPAREN          reduce using rule 81 (exp_22 -> LENGHT exp_22 .)
    RCOCHETE        reduce using rule 81 (exp_22 -> LENGHT exp_22 .)


state 90

    (83) exp_23 -> exp_23 POW . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_24                         shift and go to state 129
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 91

    (85) exp_24 -> exp_24 COMMA . exp_25
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    ID              shift and go to state 131
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_25                         shift and go to state 130

state 92

    (86) exp_24 -> exp_24 DOT . exp_25
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    ID              shift and go to state 131
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp_25                         shift and go to state 132

state 93

    (33) array -> LKEY exp . RKEY
    (37) exp -> exp . ASSIGN exp_1

    RKEY            shift and go to state 133
    ASSIGN          shift and go to state 65


state 94

    (34) array -> LKEY RKEY .

    COMMA           reduce using rule 34 (array -> LKEY RKEY .)
    DOT             reduce using rule 34 (array -> LKEY RKEY .)
    POW             reduce using rule 34 (array -> LKEY RKEY .)
    NOT             reduce using rule 34 (array -> LKEY RKEY .)
    MULT            reduce using rule 34 (array -> LKEY RKEY .)
    DIV             reduce using rule 34 (array -> LKEY RKEY .)
    DIV_INT         reduce using rule 34 (array -> LKEY RKEY .)
    MODULE          reduce using rule 34 (array -> LKEY RKEY .)
    SUM             reduce using rule 34 (array -> LKEY RKEY .)
    SUB             reduce using rule 34 (array -> LKEY RKEY .)
    CONCATENATION   reduce using rule 34 (array -> LKEY RKEY .)
    BITWISE_AND     reduce using rule 34 (array -> LKEY RKEY .)
    BITWISE_EXC_OR  reduce using rule 34 (array -> LKEY RKEY .)
    BITWISE_OR      reduce using rule 34 (array -> LKEY RKEY .)
    EQUAL           reduce using rule 34 (array -> LKEY RKEY .)
    DIF             reduce using rule 34 (array -> LKEY RKEY .)
    BIGGER_EQUAL    reduce using rule 34 (array -> LKEY RKEY .)
    LESS_EQUAL      reduce using rule 34 (array -> LKEY RKEY .)
    BIGGER_THAN     reduce using rule 34 (array -> LKEY RKEY .)
    LESS_THAN       reduce using rule 34 (array -> LKEY RKEY .)
    AND             reduce using rule 34 (array -> LKEY RKEY .)
    OR              reduce using rule 34 (array -> LKEY RKEY .)
    ASSIGN          reduce using rule 34 (array -> LKEY RKEY .)
    NEWLINE         reduce using rule 34 (array -> LKEY RKEY .)
    THEN            reduce using rule 34 (array -> LKEY RKEY .)
    DO              reduce using rule 34 (array -> LKEY RKEY .)
    IN              reduce using rule 34 (array -> LKEY RKEY .)
    RKEY            reduce using rule 34 (array -> LKEY RKEY .)
    RPAREN          reduce using rule 34 (array -> LKEY RKEY .)
    RCOCHETE        reduce using rule 34 (array -> LKEY RKEY .)


state 95

    (35) array -> ID LCOCHETE . exp RCOCHETE
    (36) array -> ID LCOCHETE . RCOCHETE
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    RCOCHETE        shift and go to state 135
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 134
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 96

    (31) call -> ID LPAREN . exp RPAREN
    (32) call -> ID LPAREN . RPAREN
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    RPAREN          shift and go to state 137
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 136
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 97

    (4) program -> comand NEWLINE program .

    $end            reduce using rule 4 (program -> comand NEWLINE program .)


state 98

    (5) program -> function NEWLINE program .

    $end            reduce using rule 5 (program -> function NEWLINE program .)


state 99

    (6) program -> local_function NEWLINE program .

    $end            reduce using rule 6 (program -> local_function NEWLINE program .)


state 100

    (15) comand -> IF list_exp THEN . comands END
    (16) comand -> IF list_exp THEN . comands ELSE comands END
    (17) comand -> IF list_exp THEN . comands elseif ELSE comands
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 138
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 101

    (29) list_exp -> LPAREN exp . RPAREN
    (37) exp -> exp . ASSIGN exp_1

    RPAREN          shift and go to state 139
    ASSIGN          shift and go to state 65


state 102

    (7) function -> FUNCTION signature comands . END

    END             shift and go to state 140


state 103

    (13) comands -> comand . NEWLINE
    (14) comands -> comand . NEWLINE comands

    NEWLINE         shift and go to state 141


state 104

    (9) signature -> ID LPAREN . sigparams RPAREN
    (10) signature -> ID LPAREN . RPAREN
    (11) sigparams -> . ID
    (12) sigparams -> . ID COMMA sigparams

    RPAREN          shift and go to state 144
    ID              shift and go to state 142

    sigparams                      shift and go to state 143

state 105

    (8) local_function -> LOCAL FUNCTION signature . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 145
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 106

    (21) other_comand -> WHILE list_exp DO . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 146
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 107

    (37) exp -> exp ASSIGN exp_1 .
    (39) exp_1 -> exp_1 . OR exp_2

    ASSIGN          reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    NEWLINE         reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    THEN            reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    DO              reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    IN              reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    RKEY            reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    RPAREN          reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    RCOCHETE        reduce using rule 37 (exp -> exp ASSIGN exp_1 .)
    OR              shift and go to state 68


state 108

    (27) fordo -> FOR list_exp DO . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 147
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 109

    (28) forin -> FOR list_exp IN . exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 148
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 110

    (39) exp_1 -> exp_1 OR exp_2 .
    (41) exp_2 -> exp_2 . AND exp_3

    OR              reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    ASSIGN          reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    NEWLINE         reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    THEN            reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    DO              reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    IN              reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    RKEY            reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    RPAREN          reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    RCOCHETE        reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    AND             shift and go to state 69


state 111

    (41) exp_2 -> exp_2 AND exp_3 .
    (43) exp_3 -> exp_3 . LESS_THAN exp_4

    AND             reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    OR              reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    ASSIGN          reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    NEWLINE         reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    THEN            reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    DO              reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    IN              reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    RKEY            reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    RPAREN          reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    RCOCHETE        reduce using rule 41 (exp_2 -> exp_2 AND exp_3 .)
    LESS_THAN       shift and go to state 70


state 112

    (43) exp_3 -> exp_3 LESS_THAN exp_4 .
    (45) exp_4 -> exp_4 . BIGGER_THAN exp_5

    LESS_THAN       reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    AND             reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    OR              reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    ASSIGN          reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    NEWLINE         reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    THEN            reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    DO              reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    IN              reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    RKEY            reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    RPAREN          reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    RCOCHETE        reduce using rule 43 (exp_3 -> exp_3 LESS_THAN exp_4 .)
    BIGGER_THAN     shift and go to state 71


state 113

    (45) exp_4 -> exp_4 BIGGER_THAN exp_5 .
    (47) exp_5 -> exp_5 . LESS_EQUAL exp_6

    BIGGER_THAN     reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    LESS_THAN       reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    AND             reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    OR              reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    ASSIGN          reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    NEWLINE         reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    THEN            reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    DO              reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    IN              reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    RKEY            reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    RPAREN          reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    RCOCHETE        reduce using rule 45 (exp_4 -> exp_4 BIGGER_THAN exp_5 .)
    LESS_EQUAL      shift and go to state 72


state 114

    (47) exp_5 -> exp_5 LESS_EQUAL exp_6 .
    (49) exp_6 -> exp_6 . BIGGER_EQUAL exp_7

    LESS_EQUAL      reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    BIGGER_THAN     reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    LESS_THAN       reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    AND             reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    OR              reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    ASSIGN          reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    NEWLINE         reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    THEN            reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    DO              reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    IN              reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    RKEY            reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    RPAREN          reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    RCOCHETE        reduce using rule 47 (exp_5 -> exp_5 LESS_EQUAL exp_6 .)
    BIGGER_EQUAL    shift and go to state 73


state 115

    (49) exp_6 -> exp_6 BIGGER_EQUAL exp_7 .
    (51) exp_7 -> exp_7 . DIF exp_8

    BIGGER_EQUAL    reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    LESS_EQUAL      reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    BIGGER_THAN     reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    LESS_THAN       reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    AND             reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    OR              reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    ASSIGN          reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    NEWLINE         reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    THEN            reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    DO              reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    IN              reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    RKEY            reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    RPAREN          reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    RCOCHETE        reduce using rule 49 (exp_6 -> exp_6 BIGGER_EQUAL exp_7 .)
    DIF             shift and go to state 74


state 116

    (51) exp_7 -> exp_7 DIF exp_8 .
    (53) exp_8 -> exp_8 . EQUAL exp_9

    DIF             reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    BIGGER_EQUAL    reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    LESS_EQUAL      reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    BIGGER_THAN     reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    LESS_THAN       reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    AND             reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    OR              reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    ASSIGN          reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    NEWLINE         reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    THEN            reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    DO              reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    IN              reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    RKEY            reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    RPAREN          reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    RCOCHETE        reduce using rule 51 (exp_7 -> exp_7 DIF exp_8 .)
    EQUAL           shift and go to state 75


state 117

    (53) exp_8 -> exp_8 EQUAL exp_9 .
    (55) exp_9 -> exp_9 . BITWISE_OR exp_10

    EQUAL           reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    DIF             reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    BIGGER_EQUAL    reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    LESS_EQUAL      reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    BIGGER_THAN     reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    LESS_THAN       reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    AND             reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    OR              reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    ASSIGN          reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    NEWLINE         reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    THEN            reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    DO              reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    IN              reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    RKEY            reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    RPAREN          reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    RCOCHETE        reduce using rule 53 (exp_8 -> exp_8 EQUAL exp_9 .)
    BITWISE_OR      shift and go to state 76


state 118

    (55) exp_9 -> exp_9 BITWISE_OR exp_10 .
    (57) exp_10 -> exp_10 . BITWISE_EXC_OR exp_11

    BITWISE_OR      reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    EQUAL           reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    DIF             reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    BIGGER_EQUAL    reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    LESS_EQUAL      reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    BIGGER_THAN     reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    LESS_THAN       reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    AND             reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    OR              reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    ASSIGN          reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    NEWLINE         reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    THEN            reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    DO              reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    IN              reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    RKEY            reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    RPAREN          reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    RCOCHETE        reduce using rule 55 (exp_9 -> exp_9 BITWISE_OR exp_10 .)
    BITWISE_EXC_OR  shift and go to state 77


state 119

    (57) exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .
    (59) exp_11 -> exp_11 . BITWISE_AND exp_12

    BITWISE_EXC_OR  reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    BITWISE_OR      reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    EQUAL           reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    DIF             reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    BIGGER_EQUAL    reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    LESS_EQUAL      reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    BIGGER_THAN     reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    LESS_THAN       reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    AND             reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    OR              reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    ASSIGN          reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    NEWLINE         reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    THEN            reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    DO              reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    IN              reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    RKEY            reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    RPAREN          reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    RCOCHETE        reduce using rule 57 (exp_10 -> exp_10 BITWISE_EXC_OR exp_11 .)
    BITWISE_AND     shift and go to state 78


state 120

    (59) exp_11 -> exp_11 BITWISE_AND exp_12 .
    (61) exp_12 -> exp_12 . CONCATENATION exp_13

    BITWISE_AND     reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    BITWISE_EXC_OR  reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    BITWISE_OR      reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    EQUAL           reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    DIF             reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    BIGGER_EQUAL    reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    LESS_EQUAL      reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    BIGGER_THAN     reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    LESS_THAN       reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    AND             reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    OR              reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    ASSIGN          reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    NEWLINE         reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    THEN            reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    DO              reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    IN              reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    RKEY            reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    RPAREN          reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    RCOCHETE        reduce using rule 59 (exp_11 -> exp_11 BITWISE_AND exp_12 .)
    CONCATENATION   shift and go to state 79


state 121

    (61) exp_12 -> exp_12 CONCATENATION exp_13 .
    (63) exp_13 -> exp_13 . SUB exp_14

    CONCATENATION   reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    BITWISE_AND     reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    BITWISE_EXC_OR  reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    BITWISE_OR      reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    EQUAL           reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    DIF             reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    BIGGER_EQUAL    reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    LESS_EQUAL      reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    BIGGER_THAN     reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    LESS_THAN       reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    AND             reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    OR              reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    ASSIGN          reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    NEWLINE         reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    THEN            reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    DO              reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    IN              reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    RKEY            reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    RPAREN          reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    RCOCHETE        reduce using rule 61 (exp_12 -> exp_12 CONCATENATION exp_13 .)
    SUB             shift and go to state 80


state 122

    (63) exp_13 -> exp_13 SUB exp_14 .
    (65) exp_14 -> exp_14 . SUM exp_15

    SUB             reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    CONCATENATION   reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    BITWISE_AND     reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    BITWISE_EXC_OR  reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    BITWISE_OR      reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    EQUAL           reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    DIF             reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    BIGGER_EQUAL    reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    LESS_EQUAL      reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    BIGGER_THAN     reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    LESS_THAN       reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    AND             reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    OR              reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    ASSIGN          reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    NEWLINE         reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    THEN            reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    DO              reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    IN              reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    RKEY            reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    RPAREN          reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    RCOCHETE        reduce using rule 63 (exp_13 -> exp_13 SUB exp_14 .)
    SUM             shift and go to state 81


state 123

    (65) exp_14 -> exp_14 SUM exp_15 .
    (67) exp_15 -> exp_15 . MODULE exp_16

    SUM             reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    SUB             reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    CONCATENATION   reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    BITWISE_AND     reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    BITWISE_EXC_OR  reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    BITWISE_OR      reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    EQUAL           reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    DIF             reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    BIGGER_EQUAL    reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    LESS_EQUAL      reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    BIGGER_THAN     reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    LESS_THAN       reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    AND             reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    OR              reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    ASSIGN          reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    NEWLINE         reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    THEN            reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    DO              reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    IN              reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    RKEY            reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    RPAREN          reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    RCOCHETE        reduce using rule 65 (exp_14 -> exp_14 SUM exp_15 .)
    MODULE          shift and go to state 82


state 124

    (67) exp_15 -> exp_15 MODULE exp_16 .
    (69) exp_16 -> exp_16 . DIV_INT exp_17

    MODULE          reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    SUM             reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    SUB             reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    CONCATENATION   reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    BITWISE_AND     reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    BITWISE_EXC_OR  reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    BITWISE_OR      reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    EQUAL           reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    DIF             reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    BIGGER_EQUAL    reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    LESS_EQUAL      reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    BIGGER_THAN     reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    LESS_THAN       reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    AND             reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    OR              reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    ASSIGN          reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    NEWLINE         reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    THEN            reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    DO              reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    IN              reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    RKEY            reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    RPAREN          reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    RCOCHETE        reduce using rule 67 (exp_15 -> exp_15 MODULE exp_16 .)
    DIV_INT         shift and go to state 83


state 125

    (69) exp_16 -> exp_16 DIV_INT exp_17 .
    (71) exp_17 -> exp_17 . DIV exp_18

    DIV_INT         reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    MODULE          reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    SUM             reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    SUB             reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    CONCATENATION   reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    BITWISE_AND     reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    BITWISE_EXC_OR  reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    BITWISE_OR      reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    EQUAL           reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    DIF             reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    BIGGER_EQUAL    reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    LESS_EQUAL      reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    BIGGER_THAN     reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    LESS_THAN       reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    AND             reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    OR              reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    ASSIGN          reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    NEWLINE         reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    THEN            reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    DO              reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    IN              reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    RKEY            reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    RPAREN          reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    RCOCHETE        reduce using rule 69 (exp_16 -> exp_16 DIV_INT exp_17 .)
    DIV             shift and go to state 84


state 126

    (71) exp_17 -> exp_17 DIV exp_18 .
    (73) exp_18 -> exp_18 . MULT exp_19

    DIV             reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    DIV_INT         reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    MODULE          reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    SUM             reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    SUB             reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    CONCATENATION   reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    BITWISE_AND     reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    BITWISE_EXC_OR  reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    BITWISE_OR      reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    EQUAL           reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    DIF             reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    BIGGER_EQUAL    reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    LESS_EQUAL      reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    BIGGER_THAN     reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    LESS_THAN       reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    AND             reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    OR              reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    ASSIGN          reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    NEWLINE         reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    THEN            reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    DO              reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    IN              reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    RKEY            reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    RPAREN          reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    RCOCHETE        reduce using rule 71 (exp_17 -> exp_17 DIV exp_18 .)
    MULT            shift and go to state 85


state 127

    (73) exp_18 -> exp_18 MULT exp_19 .
    (75) exp_19 -> exp_19 . NOT exp_20

    MULT            reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    DIV             reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    DIV_INT         reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    MODULE          reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    SUM             reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    SUB             reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    CONCATENATION   reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    BITWISE_AND     reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    BITWISE_EXC_OR  reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    BITWISE_OR      reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    EQUAL           reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    DIF             reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    BIGGER_EQUAL    reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    LESS_EQUAL      reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    BIGGER_THAN     reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    LESS_THAN       reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    AND             reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    OR              reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    ASSIGN          reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    NEWLINE         reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    THEN            reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    DO              reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    IN              reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    RKEY            reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    RPAREN          reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    RCOCHETE        reduce using rule 73 (exp_18 -> exp_18 MULT exp_19 .)
    NOT             shift and go to state 86


state 128

    (75) exp_19 -> exp_19 NOT exp_20 .

    NOT             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    MULT            reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    DIV             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    DIV_INT         reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    MODULE          reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    SUM             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    SUB             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    CONCATENATION   reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    BITWISE_AND     reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    BITWISE_EXC_OR  reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    BITWISE_OR      reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    EQUAL           reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    DIF             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    BIGGER_EQUAL    reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    LESS_EQUAL      reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    BIGGER_THAN     reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    LESS_THAN       reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    AND             reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    OR              reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    ASSIGN          reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    NEWLINE         reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    THEN            reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    DO              reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    IN              reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    RKEY            reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    RPAREN          reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)
    RCOCHETE        reduce using rule 75 (exp_19 -> exp_19 NOT exp_20 .)


state 129

    (83) exp_23 -> exp_23 POW exp_24 .
    (85) exp_24 -> exp_24 . COMMA exp_25
    (86) exp_24 -> exp_24 . DOT exp_25

    POW             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    NOT             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    MULT            reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    DIV             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    DIV_INT         reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    MODULE          reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    SUM             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    SUB             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    CONCATENATION   reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    BITWISE_AND     reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    BITWISE_EXC_OR  reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    BITWISE_OR      reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    EQUAL           reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    DIF             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    BIGGER_EQUAL    reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    LESS_EQUAL      reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    BIGGER_THAN     reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    LESS_THAN       reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    AND             reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    OR              reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    ASSIGN          reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    NEWLINE         reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    THEN            reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    DO              reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    IN              reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    RKEY            reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    RPAREN          reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    RCOCHETE        reduce using rule 83 (exp_23 -> exp_23 POW exp_24 .)
    COMMA           shift and go to state 91
    DOT             shift and go to state 92


state 130

    (85) exp_24 -> exp_24 COMMA exp_25 .

    COMMA           reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    DOT             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    POW             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    NOT             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    MULT            reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    DIV             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    DIV_INT         reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    MODULE          reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    SUM             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    SUB             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    CONCATENATION   reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    BITWISE_AND     reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    BITWISE_EXC_OR  reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    BITWISE_OR      reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    EQUAL           reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    DIF             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    BIGGER_EQUAL    reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    LESS_EQUAL      reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    BIGGER_THAN     reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    LESS_THAN       reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    AND             reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    OR              reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    ASSIGN          reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    NEWLINE         reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    THEN            reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    DO              reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    IN              reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    RKEY            reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    RPAREN          reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)
    RCOCHETE        reduce using rule 85 (exp_24 -> exp_24 COMMA exp_25 .)


state 131

    (93) exp_25 -> ID .

    COMMA           reduce using rule 93 (exp_25 -> ID .)
    DOT             reduce using rule 93 (exp_25 -> ID .)
    POW             reduce using rule 93 (exp_25 -> ID .)
    NOT             reduce using rule 93 (exp_25 -> ID .)
    MULT            reduce using rule 93 (exp_25 -> ID .)
    DIV             reduce using rule 93 (exp_25 -> ID .)
    DIV_INT         reduce using rule 93 (exp_25 -> ID .)
    MODULE          reduce using rule 93 (exp_25 -> ID .)
    SUM             reduce using rule 93 (exp_25 -> ID .)
    SUB             reduce using rule 93 (exp_25 -> ID .)
    CONCATENATION   reduce using rule 93 (exp_25 -> ID .)
    BITWISE_AND     reduce using rule 93 (exp_25 -> ID .)
    BITWISE_EXC_OR  reduce using rule 93 (exp_25 -> ID .)
    BITWISE_OR      reduce using rule 93 (exp_25 -> ID .)
    EQUAL           reduce using rule 93 (exp_25 -> ID .)
    DIF             reduce using rule 93 (exp_25 -> ID .)
    BIGGER_EQUAL    reduce using rule 93 (exp_25 -> ID .)
    LESS_EQUAL      reduce using rule 93 (exp_25 -> ID .)
    BIGGER_THAN     reduce using rule 93 (exp_25 -> ID .)
    LESS_THAN       reduce using rule 93 (exp_25 -> ID .)
    AND             reduce using rule 93 (exp_25 -> ID .)
    OR              reduce using rule 93 (exp_25 -> ID .)
    ASSIGN          reduce using rule 93 (exp_25 -> ID .)
    NEWLINE         reduce using rule 93 (exp_25 -> ID .)
    THEN            reduce using rule 93 (exp_25 -> ID .)
    DO              reduce using rule 93 (exp_25 -> ID .)
    IN              reduce using rule 93 (exp_25 -> ID .)
    RKEY            reduce using rule 93 (exp_25 -> ID .)
    RPAREN          reduce using rule 93 (exp_25 -> ID .)
    RCOCHETE        reduce using rule 93 (exp_25 -> ID .)


state 132

    (86) exp_24 -> exp_24 DOT exp_25 .

    COMMA           reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    DOT             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    POW             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    NOT             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    MULT            reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    DIV             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    DIV_INT         reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    MODULE          reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    SUM             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    SUB             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    CONCATENATION   reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    BITWISE_AND     reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    BITWISE_EXC_OR  reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    BITWISE_OR      reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    EQUAL           reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    DIF             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    BIGGER_EQUAL    reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    LESS_EQUAL      reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    BIGGER_THAN     reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    LESS_THAN       reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    AND             reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    OR              reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    ASSIGN          reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    NEWLINE         reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    THEN            reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    DO              reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    IN              reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    RKEY            reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    RPAREN          reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)
    RCOCHETE        reduce using rule 86 (exp_24 -> exp_24 DOT exp_25 .)


state 133

    (33) array -> LKEY exp RKEY .

    COMMA           reduce using rule 33 (array -> LKEY exp RKEY .)
    DOT             reduce using rule 33 (array -> LKEY exp RKEY .)
    POW             reduce using rule 33 (array -> LKEY exp RKEY .)
    NOT             reduce using rule 33 (array -> LKEY exp RKEY .)
    MULT            reduce using rule 33 (array -> LKEY exp RKEY .)
    DIV             reduce using rule 33 (array -> LKEY exp RKEY .)
    DIV_INT         reduce using rule 33 (array -> LKEY exp RKEY .)
    MODULE          reduce using rule 33 (array -> LKEY exp RKEY .)
    SUM             reduce using rule 33 (array -> LKEY exp RKEY .)
    SUB             reduce using rule 33 (array -> LKEY exp RKEY .)
    CONCATENATION   reduce using rule 33 (array -> LKEY exp RKEY .)
    BITWISE_AND     reduce using rule 33 (array -> LKEY exp RKEY .)
    BITWISE_EXC_OR  reduce using rule 33 (array -> LKEY exp RKEY .)
    BITWISE_OR      reduce using rule 33 (array -> LKEY exp RKEY .)
    EQUAL           reduce using rule 33 (array -> LKEY exp RKEY .)
    DIF             reduce using rule 33 (array -> LKEY exp RKEY .)
    BIGGER_EQUAL    reduce using rule 33 (array -> LKEY exp RKEY .)
    LESS_EQUAL      reduce using rule 33 (array -> LKEY exp RKEY .)
    BIGGER_THAN     reduce using rule 33 (array -> LKEY exp RKEY .)
    LESS_THAN       reduce using rule 33 (array -> LKEY exp RKEY .)
    AND             reduce using rule 33 (array -> LKEY exp RKEY .)
    OR              reduce using rule 33 (array -> LKEY exp RKEY .)
    ASSIGN          reduce using rule 33 (array -> LKEY exp RKEY .)
    NEWLINE         reduce using rule 33 (array -> LKEY exp RKEY .)
    THEN            reduce using rule 33 (array -> LKEY exp RKEY .)
    DO              reduce using rule 33 (array -> LKEY exp RKEY .)
    IN              reduce using rule 33 (array -> LKEY exp RKEY .)
    RKEY            reduce using rule 33 (array -> LKEY exp RKEY .)
    RPAREN          reduce using rule 33 (array -> LKEY exp RKEY .)
    RCOCHETE        reduce using rule 33 (array -> LKEY exp RKEY .)


state 134

    (35) array -> ID LCOCHETE exp . RCOCHETE
    (37) exp -> exp . ASSIGN exp_1

    RCOCHETE        shift and go to state 149
    ASSIGN          shift and go to state 65


state 135

    (36) array -> ID LCOCHETE RCOCHETE .

    COMMA           reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    DOT             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    POW             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    NOT             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    MULT            reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    DIV             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    DIV_INT         reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    MODULE          reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    SUM             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    SUB             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    CONCATENATION   reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    BITWISE_AND     reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    BITWISE_EXC_OR  reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    BITWISE_OR      reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    EQUAL           reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    DIF             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    BIGGER_EQUAL    reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    LESS_EQUAL      reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    BIGGER_THAN     reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    LESS_THAN       reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    AND             reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    OR              reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    ASSIGN          reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    NEWLINE         reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    THEN            reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    DO              reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    IN              reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    RKEY            reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    RPAREN          reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)
    RCOCHETE        reduce using rule 36 (array -> ID LCOCHETE RCOCHETE .)


state 136

    (31) call -> ID LPAREN exp . RPAREN
    (37) exp -> exp . ASSIGN exp_1

    RPAREN          shift and go to state 150
    ASSIGN          shift and go to state 65


state 137

    (32) call -> ID LPAREN RPAREN .

    COMMA           reduce using rule 32 (call -> ID LPAREN RPAREN .)
    DOT             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    POW             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    NOT             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 32 (call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    DIV_INT         reduce using rule 32 (call -> ID LPAREN RPAREN .)
    MODULE          reduce using rule 32 (call -> ID LPAREN RPAREN .)
    SUM             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    SUB             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    CONCATENATION   reduce using rule 32 (call -> ID LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 32 (call -> ID LPAREN RPAREN .)
    BITWISE_EXC_OR  reduce using rule 32 (call -> ID LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 32 (call -> ID LPAREN RPAREN .)
    EQUAL           reduce using rule 32 (call -> ID LPAREN RPAREN .)
    DIF             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    BIGGER_EQUAL    reduce using rule 32 (call -> ID LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 32 (call -> ID LPAREN RPAREN .)
    BIGGER_THAN     reduce using rule 32 (call -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 32 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 32 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 32 (call -> ID LPAREN RPAREN .)
    ASSIGN          reduce using rule 32 (call -> ID LPAREN RPAREN .)
    NEWLINE         reduce using rule 32 (call -> ID LPAREN RPAREN .)
    THEN            reduce using rule 32 (call -> ID LPAREN RPAREN .)
    DO              reduce using rule 32 (call -> ID LPAREN RPAREN .)
    IN              reduce using rule 32 (call -> ID LPAREN RPAREN .)
    RKEY            reduce using rule 32 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 32 (call -> ID LPAREN RPAREN .)
    RCOCHETE        reduce using rule 32 (call -> ID LPAREN RPAREN .)


state 138

    (15) comand -> IF list_exp THEN comands . END
    (16) comand -> IF list_exp THEN comands . ELSE comands END
    (17) comand -> IF list_exp THEN comands . elseif ELSE comands
    (19) elseif -> . ELSEIF list_exp THEN comands
    (20) elseif -> . ELSEIF list_exp THEN comands elseif

    END             shift and go to state 151
    ELSE            shift and go to state 152
    ELSEIF          shift and go to state 154

    elseif                         shift and go to state 153

state 139

    (29) list_exp -> LPAREN exp RPAREN .

    THEN            reduce using rule 29 (list_exp -> LPAREN exp RPAREN .)
    DO              reduce using rule 29 (list_exp -> LPAREN exp RPAREN .)
    IN              reduce using rule 29 (list_exp -> LPAREN exp RPAREN .)


state 140

    (7) function -> FUNCTION signature comands END .

    NEWLINE         reduce using rule 7 (function -> FUNCTION signature comands END .)


state 141

    (13) comands -> comand NEWLINE .
    (14) comands -> comand NEWLINE . comands
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    END             reduce using rule 13 (comands -> comand NEWLINE .)
    ELSE            reduce using rule 13 (comands -> comand NEWLINE .)
    ELSEIF          reduce using rule 13 (comands -> comand NEWLINE .)
    NEWLINE         reduce using rule 13 (comands -> comand NEWLINE .)
    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comand                         shift and go to state 103
    comands                        shift and go to state 155
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 142

    (11) sigparams -> ID .
    (12) sigparams -> ID . COMMA sigparams

    RPAREN          reduce using rule 11 (sigparams -> ID .)
    COMMA           shift and go to state 156


state 143

    (9) signature -> ID LPAREN sigparams . RPAREN

    RPAREN          shift and go to state 157


state 144

    (10) signature -> ID LPAREN RPAREN .

    IF              reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    FOR             reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    DENIAL          reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    UNARY_BITWISE_NOT reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    LENGHT          reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    LKEY            reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    ID              reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    STRING          reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    LOCAL           reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    NIL             reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 10 (signature -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 10 (signature -> ID LPAREN RPAREN .)


state 145

    (8) local_function -> LOCAL FUNCTION signature comands . END

    END             shift and go to state 158


state 146

    (21) other_comand -> WHILE list_exp DO comands . END

    END             shift and go to state 159


state 147

    (27) fordo -> FOR list_exp DO comands . END

    END             shift and go to state 160


state 148

    (28) forin -> FOR list_exp IN exp . DO comands END
    (37) exp -> exp . ASSIGN exp_1

    DO              shift and go to state 161
    ASSIGN          shift and go to state 65


state 149

    (35) array -> ID LCOCHETE exp RCOCHETE .

    COMMA           reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    DOT             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    POW             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    NOT             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    MULT            reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    DIV             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    DIV_INT         reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    MODULE          reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    SUM             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    SUB             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    CONCATENATION   reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    BITWISE_AND     reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    BITWISE_EXC_OR  reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    BITWISE_OR      reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    EQUAL           reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    DIF             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    BIGGER_EQUAL    reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    LESS_EQUAL      reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    BIGGER_THAN     reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    LESS_THAN       reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    AND             reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    OR              reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    ASSIGN          reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    NEWLINE         reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    THEN            reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    DO              reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    IN              reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    RKEY            reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    RPAREN          reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)
    RCOCHETE        reduce using rule 35 (array -> ID LCOCHETE exp RCOCHETE .)


state 150

    (31) call -> ID LPAREN exp RPAREN .

    COMMA           reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    DOT             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    POW             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    NOT             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    MULT            reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    DIV             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    DIV_INT         reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    MODULE          reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    SUM             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    SUB             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    CONCATENATION   reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    BITWISE_AND     reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    BITWISE_EXC_OR  reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    BITWISE_OR      reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    EQUAL           reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    DIF             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    BIGGER_EQUAL    reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    LESS_EQUAL      reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    BIGGER_THAN     reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    LESS_THAN       reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    AND             reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    OR              reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    ASSIGN          reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    NEWLINE         reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    THEN            reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    DO              reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    IN              reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    RKEY            reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    RPAREN          reduce using rule 31 (call -> ID LPAREN exp RPAREN .)
    RCOCHETE        reduce using rule 31 (call -> ID LPAREN exp RPAREN .)


state 151

    (15) comand -> IF list_exp THEN comands END .

    NEWLINE         reduce using rule 15 (comand -> IF list_exp THEN comands END .)


state 152

    (16) comand -> IF list_exp THEN comands ELSE . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 162
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 153

    (17) comand -> IF list_exp THEN comands elseif . ELSE comands

    ELSE            shift and go to state 163


state 154

    (19) elseif -> ELSEIF . list_exp THEN comands
    (20) elseif -> ELSEIF . list_exp THEN comands elseif
    (29) list_exp -> . LPAREN exp RPAREN
    (30) list_exp -> . exp
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    LPAREN          shift and go to state 57
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    list_exp                       shift and go to state 164
    exp                            shift and go to state 58
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 155

    (14) comands -> comand NEWLINE comands .

    END             reduce using rule 14 (comands -> comand NEWLINE comands .)
    ELSE            reduce using rule 14 (comands -> comand NEWLINE comands .)
    ELSEIF          reduce using rule 14 (comands -> comand NEWLINE comands .)
    NEWLINE         reduce using rule 14 (comands -> comand NEWLINE comands .)


state 156

    (12) sigparams -> ID COMMA . sigparams
    (11) sigparams -> . ID
    (12) sigparams -> . ID COMMA sigparams

    ID              shift and go to state 142

    sigparams                      shift and go to state 165

state 157

    (9) signature -> ID LPAREN sigparams RPAREN .

    IF              reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    WHILE           reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    RETURN          reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    BREAK           reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    FOR             reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    DENIAL          reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    UNARY_BITWISE_NOT reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    LENGHT          reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    LKEY            reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    ID              reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    NUMBER          reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    STRING          reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    LOCAL           reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    NIL             reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    TRUE            reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)
    FALSE           reduce using rule 9 (signature -> ID LPAREN sigparams RPAREN .)


state 158

    (8) local_function -> LOCAL FUNCTION signature comands END .

    NEWLINE         reduce using rule 8 (local_function -> LOCAL FUNCTION signature comands END .)


state 159

    (21) other_comand -> WHILE list_exp DO comands END .

    NEWLINE         reduce using rule 21 (other_comand -> WHILE list_exp DO comands END .)


state 160

    (27) fordo -> FOR list_exp DO comands END .

    NEWLINE         reduce using rule 27 (fordo -> FOR list_exp DO comands END .)


state 161

    (28) forin -> FOR list_exp IN exp DO . comands END
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    exp                            shift and go to state 11
    comands                        shift and go to state 166
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 162

    (16) comand -> IF list_exp THEN comands ELSE comands . END

    END             shift and go to state 167


state 163

    (17) comand -> IF list_exp THEN comands elseif ELSE . comands
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 168
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 164

    (19) elseif -> ELSEIF list_exp . THEN comands
    (20) elseif -> ELSEIF list_exp . THEN comands elseif

    THEN            shift and go to state 169


state 165

    (12) sigparams -> ID COMMA sigparams .

    RPAREN          reduce using rule 12 (sigparams -> ID COMMA sigparams .)


state 166

    (28) forin -> FOR list_exp IN exp DO comands . END

    END             shift and go to state 170


state 167

    (16) comand -> IF list_exp THEN comands ELSE comands END .

    NEWLINE         reduce using rule 16 (comand -> IF list_exp THEN comands ELSE comands END .)


state 168

    (17) comand -> IF list_exp THEN comands elseif ELSE comands .

    NEWLINE         reduce using rule 17 (comand -> IF list_exp THEN comands elseif ELSE comands .)


state 169

    (19) elseif -> ELSEIF list_exp THEN . comands
    (20) elseif -> ELSEIF list_exp THEN . comands elseif
    (13) comands -> . comand NEWLINE
    (14) comands -> . comand NEWLINE comands
    (15) comand -> . IF list_exp THEN comands END
    (16) comand -> . IF list_exp THEN comands ELSE comands END
    (17) comand -> . IF list_exp THEN comands elseif ELSE comands
    (18) comand -> . other_comand
    (21) other_comand -> . WHILE list_exp DO comands END
    (22) other_comand -> . fordo
    (23) other_comand -> . exp
    (24) other_comand -> . forin
    (25) other_comand -> . RETURN exp
    (26) other_comand -> . BREAK
    (27) fordo -> . FOR list_exp DO comands END
    (37) exp -> . exp ASSIGN exp_1
    (38) exp -> . exp_1
    (28) forin -> . FOR list_exp IN exp DO comands END
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 AND exp_3
    (42) exp_2 -> . exp_3
    (43) exp_3 -> . exp_3 LESS_THAN exp_4
    (44) exp_3 -> . exp_4
    (45) exp_4 -> . exp_4 BIGGER_THAN exp_5
    (46) exp_4 -> . exp_5
    (47) exp_5 -> . exp_5 LESS_EQUAL exp_6
    (48) exp_5 -> . exp_6
    (49) exp_6 -> . exp_6 BIGGER_EQUAL exp_7
    (50) exp_6 -> . exp_7
    (51) exp_7 -> . exp_7 DIF exp_8
    (52) exp_7 -> . exp_8
    (53) exp_8 -> . exp_8 EQUAL exp_9
    (54) exp_8 -> . exp_9
    (55) exp_9 -> . exp_9 BITWISE_OR exp_10
    (56) exp_9 -> . exp_10
    (57) exp_10 -> . exp_10 BITWISE_EXC_OR exp_11
    (58) exp_10 -> . exp_11
    (59) exp_11 -> . exp_11 BITWISE_AND exp_12
    (60) exp_11 -> . exp_12
    (61) exp_12 -> . exp_12 CONCATENATION exp_13
    (62) exp_12 -> . exp_13
    (63) exp_13 -> . exp_13 SUB exp_14
    (64) exp_13 -> . exp_14
    (65) exp_14 -> . exp_14 SUM exp_15
    (66) exp_14 -> . exp_15
    (67) exp_15 -> . exp_15 MODULE exp_16
    (68) exp_15 -> . exp_16
    (69) exp_16 -> . exp_16 DIV_INT exp_17
    (70) exp_16 -> . exp_17
    (71) exp_17 -> . exp_17 DIV exp_18
    (72) exp_17 -> . exp_18
    (73) exp_18 -> . exp_18 MULT exp_19
    (74) exp_18 -> . exp_19
    (75) exp_19 -> . exp_19 NOT exp_20
    (76) exp_19 -> . exp_20
    (77) exp_20 -> . DENIAL exp_20
    (78) exp_20 -> . exp_21
    (79) exp_21 -> . UNARY_BITWISE_NOT exp_21
    (80) exp_21 -> . exp_22
    (81) exp_22 -> . LENGHT exp_22
    (82) exp_22 -> . exp_23
    (83) exp_23 -> . exp_23 POW exp_24
    (84) exp_23 -> . exp_24
    (85) exp_24 -> . exp_24 COMMA exp_25
    (86) exp_24 -> . exp_24 DOT exp_25
    (87) exp_24 -> . array
    (88) exp_24 -> . call
    (89) exp_24 -> . exp_25
    (33) array -> . LKEY exp RKEY
    (34) array -> . LKEY RKEY
    (35) array -> . ID LCOCHETE exp RCOCHETE
    (36) array -> . ID LCOCHETE RCOCHETE
    (31) call -> . ID LPAREN exp RPAREN
    (32) call -> . ID LPAREN RPAREN
    (90) exp_25 -> . NUMBER
    (91) exp_25 -> . STRING
    (92) exp_25 -> . LOCAL ID
    (93) exp_25 -> . ID
    (94) exp_25 -> . NIL
    (95) exp_25 -> . TRUE
    (96) exp_25 -> . FALSE

    IF              shift and go to state 5
    WHILE           shift and go to state 9
    RETURN          shift and go to state 13
    BREAK           shift and go to state 14
    FOR             shift and go to state 15
    DENIAL          shift and go to state 36
    UNARY_BITWISE_NOT shift and go to state 38
    LENGHT          shift and go to state 40
    LKEY            shift and go to state 46
    ID              shift and go to state 47
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    LOCAL           shift and go to state 59
    NIL             shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    comands                        shift and go to state 171
    comand                         shift and go to state 103
    other_comand                   shift and go to state 6
    fordo                          shift and go to state 10
    exp                            shift and go to state 11
    forin                          shift and go to state 12
    exp_1                          shift and go to state 16
    exp_2                          shift and go to state 17
    exp_3                          shift and go to state 18
    exp_4                          shift and go to state 19
    exp_5                          shift and go to state 20
    exp_6                          shift and go to state 21
    exp_7                          shift and go to state 22
    exp_8                          shift and go to state 23
    exp_9                          shift and go to state 24
    exp_10                         shift and go to state 25
    exp_11                         shift and go to state 26
    exp_12                         shift and go to state 27
    exp_13                         shift and go to state 28
    exp_14                         shift and go to state 29
    exp_15                         shift and go to state 30
    exp_16                         shift and go to state 31
    exp_17                         shift and go to state 32
    exp_18                         shift and go to state 33
    exp_19                         shift and go to state 34
    exp_20                         shift and go to state 35
    exp_21                         shift and go to state 37
    exp_22                         shift and go to state 39
    exp_23                         shift and go to state 41
    exp_24                         shift and go to state 42
    exp_25                         shift and go to state 43
    array                          shift and go to state 44
    call                           shift and go to state 45

state 170

    (28) forin -> FOR list_exp IN exp DO comands END .

    NEWLINE         reduce using rule 28 (forin -> FOR list_exp IN exp DO comands END .)


state 171

    (19) elseif -> ELSEIF list_exp THEN comands .
    (20) elseif -> ELSEIF list_exp THEN comands . elseif
    (19) elseif -> . ELSEIF list_exp THEN comands
    (20) elseif -> . ELSEIF list_exp THEN comands elseif

    ELSE            reduce using rule 19 (elseif -> ELSEIF list_exp THEN comands .)
    ELSEIF          shift and go to state 154

    elseif                         shift and go to state 172

state 172

    (20) elseif -> ELSEIF list_exp THEN comands elseif .

    ELSE            reduce using rule 20 (elseif -> ELSEIF list_exp THEN comands elseif .)

